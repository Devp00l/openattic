%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.1
%%For: (J\766rg Serries) (serriesXmedia)
%%Title: (itcockpit.ai)
%%CreationDate: 4/13/2007 9:14 AM
%%BoundingBox: 67 156 778 379
%%HiResBoundingBox: 67.418 156.9482 777.0479 378.4292
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKCustomColor: 1 1 1 1 ([Passermarken])
%%+ 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 420.5 295.7754 420.5 295.7754
%AI3_TileBox: 13.925 8.31323 833.045 584.3132
%AI3_DocumentPreview: None
%AI5_ArtSize: 842 595
%AI5_RulerUnits: 4
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -201.5 719.7754 1 1260 863 26 0 0 9 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 40 8
%%BeginData: 6843 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD05FFC3BC8DB593BCC3FD77FFC38DB08CB08CB08CB08DC9FD74FF
%C38DB08DB58DB08DB58DB08CC3FD72FFC38CB08CB08CB08CB08CB08CB08C
%C9FD71FF8DB08DB58DB58DB58DB58DB58DB093FD70FFA0B08CB08DB08CB0
%8DB08CB08DB08CB0A1FD05FF5252FD68FFBC8DB08DB58DB08DB58DB08DB5
%8DB08CBCFFFFA852F8F8F8FD68FF8CB08CB08CB08CB08CB08CB08CB08CB0
%93FF7DFD04F827FD68FFB58DB58DB58DB58DB58DB58DB58DB58DBCFF7DF8
%27F8F827FD68FF8DB08DB08CB08DB08CB08DB08CB08DB093FF7DFD04F827
%FD39FFA8527652A8FD1CFF7D52527DFD04FF5276527DFFFFBC8CB58DB08D
%B58DB08DB58DB08DB58DBCFF7DFD04F827FD39FF7DF8F8F852FD1CFF27F8
%F8F8FFFFFFA8F8F8F820FFFFA0B08CB08CB08CB08CB08CB08CB08CB0A1FF
%27FD04F827FD39FF7DF8F8F876FD1CFFFD04F8A8FFFFFFF8F8F827FFFFFF
%93B08DB58DB58DB58DB58DB58DB093FFFF27FD04F827FD39FF7D27F8F852
%FD1CFF7D275252FD04FF27F8F827FFFFFFC98CB08DB08CB08DB08CB08DB0
%8CCAFF7DFD05F8275276527D52A8FD04FF7D7D4B52527DCAFD0AFFA85252
%27527DFD0CFF7D52524B767DFD06FF7DF8F8F876FD04FFFD05A8FFA1A87D
%FFFFA8527D527DA8FD07FFA8CAA8CAFFFFA8A8F8F8F827A8A8FFFFC38CB0
%8DB08DB58DB08DB08DC9FFFFFD0CF87DFFFFA827FD06F82752FD07FFA827
%FD07F852FD08FF5227FD06F820A8FD04FF7DF8F8F852FFFFFF7DFD04F8FF
%76F8F8F8524BFD06F820A8FD05FF27F8F820FF52FD08F8FFFFFFC98DB08C
%B08CB08CB093CAFFFFFD0DF87DFF52FD0BF8FD05FF52FD0AF820A8FD05FF
%FD0BF852FFFFFF7DF8F8F87DFFFFA1FD04F8A8FF76FD0DF852FD04FF20F8
%F827FF52FD08F8FD05FFC3BC93BCB5BCC3FFFFFF27FD04F827F8F8F827F8
%20F827A876F827F8F8F8272727FD04F826FFFFFF7DFD04F827272720FD04
%F827FD04FF20FD04F8272727F8F8F827F87DFFFF7DF8F8F852FFFF27F8F8
%F8A1FFFF52FD06F8272727F8F8F827F876FFFFFF27F8F8F8FF7D2727F8F8
%27F82727FD0CFFA85227A8FFA8FD05F827A8FFA8FFFFA8FD04F84BFD04FF
%7DFD04F852FFA8FD04F827A8FFFFFF7D27F8F8F84BFFFF27FD04F8A1FD04
%FF27FD04F8A8FF7DF8F8F87DFF27F8F8F852FFFFFF76FD05F87DFFFFFFA8
%27FD04F8A8FFFF20F8F827FD04FFF8F8F827FD0AFFA1525227F8F827FFFF
%A8FD05F827FD05FF27F8F8F84BFD06FF7D20272052FF77F8F8F84BFD06FF
%A827F8F8F8FFFFFD04F8A8FD06FF4B2726277DFF7DF8F8F87D7DF8F8F852
%FD04FF52FD04F8A8FD06FF27F8F8F827FFFF27F8F8F8FFFFFFA827F8F827
%FD0AFFFD07F8FFFFA8FD05F827FD04FFCAFD04F8FD0DFF20F8F8F87DFD07
%FF27F8F8F87DA1F8F8F84BFD0DFF7DF8F8F827F8F8F827FD05FF7DF8F8F8
%4BFD07FFA8F8F8F827FFFFF8F8F820A8FFFFFFF8F8F827FD0AFFF8F827F8
%F8F827FFFFA827FD04F827FD05FFF827F827FD0DFF27F8F8F8FD08FF7DF8
%F8F87D7DF8F8F852FD0DFF7D27FD06F87DFD05FF52F8F8F852FD08FF27F8
%F8F8FFFF27F8F8F8FFFFFFA827F8F827FD0AFFFD06F820FFFFA8FD05F827
%FD04FFA8FD04F8FD0DFF20F8F8F8A8FD07FF27F8F8F87D7DF8F8F852FD0D
%FF7DF8F8F852FD04F87DFD04FF7DF8F8F852FD08FFF8F8F827FFFF20F8F8
%20FD04FFF8F8F827FD09FFA827FD05F827FFFFA8FD05F827FD05FF27F8F8
%F87DFD06FFA8274B2776FF52F8F8F852FD07FF27F8F8F8A8A8FD04F8FD07
%FF524B27277DFF7DF8F8F87DA8FD04F8A8FFFFFF52FD04F8FD07FF52F8F8
%F827FFFF27F8F8F8FD04FFF8F8F827FD0AFFFD06F820FFFFA8FD05F827FD
%05FF7DFD04F87DFD04FFA8FD04F827FFA8FD04F87DFD04FFA827F8F8F827
%FFFF20FD04F8FD05FF52FD04F8A8FF7DF8F8F87DFF52FD04F8A8FFFF76FD
%05F8FD05FF52FD04F87DFFFF20F8F827FD04FFF8F8F827FD09FFA827F8F8
%F827F827FFFFA8F8F827F8F827FD06FF27F827F8F827525252FD05F8FFFF
%FF52FD04F82752522727F8F8F827A8FFFFA8FD05F852525227F8F827F852
%FFFF7DF8F8F852FFFF52F8F8F827FFFF52FD06F852525227F8F827F827FF
%FFFF27F8F8F8FD04FF20F8F827FD0AFFFD06F820FFFFA8FD05F827FD07FF
%27FD0BF8A8FD04FF27FD0BF876FD04FF7DFD0BF827FFFFFF7DF8F8F87DFF
%FFFF27F8F8F827FF7DFD0DF827FD04FF20F8F827FD04FFF8F8F827FD0AFF
%FD06F827FFFFA8FD05F827FD08FF52FD08F827FD07FF5227FD07F827A8FD
%06FFA827FD08F852FD04FF7DF8F8F852FFFFFFA827F8F8F84B52F8F8F827
%FD08F852FD05FF27F8F8F8FFFFFFA8F8F8F820FD0AFFFD07F8FFFFA8FD05
%F827FD06FFCAFFFFA85227202720527DFD09FFA8762727F827277DFD0AFF
%7D522027202752A8FFFFCAFFFFA8527652A8FD04FFA87652765252F8F8F8
%A8A8522627202752A8FFFFCAFFFFFF7D76527DCAFFFFFF5276527DFD0AFF
%20F827F8F8F827FFFFA827FD04F827FD47FF76F8F8F87DFD24FFFD06F820
%FFFFA8FD05F827FD47FF7DF8F8F87DFD23FFA827FD05F827FFFFA8FD05F8
%27FD47FF52F8F8F87DFD24FFFD06F820FFFFA8FD05F827FD47FF7DF82720
%A8FD23FFA827F8F8F827F827FFFFA8F8F827F8F8F8FD5DFFCAFD12FFFD06
%F820FFFFFFFD06F84BFD08FFCAA1CAA8FFFFFFA8FFA1C3CAC393C9FFFFA1
%C9FFFFCACAA0FFCAC3CAFFCACAA1CAFFC9A1FFFFCAA0CAFFFFCACAA0CFFF
%FFA1C3CAFFFFCAA0CACAFFFFCAA1FFFFFFCAC3A7FFA1CAFFFFCAC3A1FFFF
%CAA8C3CAFFA0B5A1FD11FFFD06F827FFFFFF27FD07F82727274CFFFFC393
%C3CABCA0FFBCC29ABCC3CA9AB5C3FF99C3BCC2FFB5BCBC93C2BCB5FFC38D
%C393BCC2B5A0FFC2C393C3FFB59AC293FFCAC3C2B5CACA93C399B5FFC39A
%C993FF9AB6C2B599C393CAFFBCC3C29AFF93BC9AB5CAC38DC3CAFD10FFFD
%07F8FFFFFF27FD0AF827FFFFA0B5A1FFA1B5A8B5CAC293CAFFC993FFA0B0
%A1C38DCA8DFFFFB5A1FF93CA9ABCFFC393FFA1B5FFCA9AB593FF8DFFFFB5
%A1FFA0C28DC993C3FFCA93CF8DC3A1B5A1BC9AFF9ABCFFC399C38CC9A0B5
%A8B5CAFF93C3CAB5FD12FFFD06F827FD04FF27FD06F827F8F8F8FFFFFFCA
%BCBCFF99B5BCFFFFCA8DC9C9BCFFC38DCAC9CFCABCFFFF93CAFFBCC9C3C2
%FFC3BCFFCA99CA8DFFA0BCFFB5FFFFB5C39ABCCFB5C3BCC2FFC3BCCAB5C2
%CACAFF99C3FFC39AFFC3BCC3B5C9CACAFF93FFFFBCC3FF93FD12FF272720
%27202727FD05FF7D27FD08F87DFFA0BC93C3FFCA8CCAFFBC9ABCC3FF93BC
%CABC93BCA1FF93FFFFB5A7FF93CAA0C3FFC399FFC3BCA7B599BB99FF93FF
%FFBCA1C393C28DCACABC9ABC93FFA0BB9AC2CFBCA0FF9AC2FFC39AFF99BC
%9AC3CABCCAFF99C3FFBC93FD20FFA8A87DA8A8FD05FFC9CFFFFF93C2FFFF
%CACACAFFFFFFC9FFFFCAC3FD13FFCACAFD09FFCACAFFFFFFCAFFBCBCFFFF
%CACACAFD0BFFC9CACFFD08FFCAFD2DFF9ABCFD30FFA7BC99BCCAFD24FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Abpausen) (Abpausen-Suite.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Angleichungen-Zusatzmodul) (Live-Angleichungen.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Musterpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Bildpinsel-Zusatzmodul) (Bild auf Pfad.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Kalligraphiepinsel-Zusatzmodul) (Kalligrafiepinsel-Werkzeug.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Spezialpinsel-Zusatzmodul) (Spezialpinsel-Werkzeug.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe H\374llen-Zusatzmodul) (H\374llen und Verkr\374mmen.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Zusammengesetzte Form) (PathFinder-Suite.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbole.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Blendenflecke.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Plug-In Interaktiv malen) (PlanetX-Plug-In.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Gitter auf Gitter)
(Gitter auf Gitter) 10.457 10.457 73.207 73.2051 [
%AI3_Tile
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
10.457 36.6006 m
10.457 41.8311 L
15.6855 41.8311 L
26.1426 31.3711 L
26.1426 26.1416 L
20.9131 26.1416 L
10.457 36.6006 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
10.457 36.6006 m
10.457 41.8311 L
15.6855 41.8311 L
26.1426 31.3711 L
26.1426 26.1416 L
20.9131 26.1416 L
10.457 36.6006 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.8301 15.6836 m
41.832 10.457 L
36.6025 10.457 L
26.1436 20.9141 L
26.1436 26.1426 L
31.373 26.1426 L
41.8301 15.6836 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.8301 15.6836 m
41.832 10.457 L
36.6025 10.457 L
26.1436 20.9141 L
26.1436 26.1426 L
31.373 26.1426 L
41.8301 15.6836 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.832 36.6006 m
41.832 41.8311 L
47.0605 41.8311 L
57.5195 31.3711 L
57.5195 26.1416 L
52.29 26.1416 L
41.832 36.6006 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.832 36.6006 m
41.832 41.8311 L
47.0605 41.8311 L
57.5195 31.3711 L
57.5195 26.1416 L
52.29 26.1416 L
41.832 36.6006 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
73.2031 15.6836 m
73.207 10.457 L
67.9775 10.457 L
57.5195 20.9141 L
57.5195 26.1426 L
62.748 26.1426 L
73.2031 15.6836 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
73.2031 15.6836 m
73.207 10.457 L
67.9775 10.457 L
57.5195 20.9141 L
57.5195 26.1426 L
62.748 26.1426 L
73.2031 15.6836 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
10.457 67.9756 m
10.457 73.2051 L
15.6855 73.2051 L
26.1426 62.7451 L
26.1426 57.5166 L
20.9131 57.5166 L
10.457 67.9756 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
10.457 67.9756 m
10.457 73.2051 L
15.6855 73.2051 L
26.1426 62.7451 L
26.1426 57.5166 L
20.9131 57.5166 L
10.457 67.9756 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.8301 47.0576 m
41.832 41.8311 L
36.6025 41.8311 L
26.1436 52.2881 L
26.1436 57.5166 L
31.373 57.5166 L
41.8301 47.0576 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.8301 47.0576 m
41.832 41.8311 L
36.6025 41.8311 L
26.1436 52.2881 L
26.1436 57.5166 L
31.373 57.5166 L
41.8301 47.0576 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.832 67.9756 m
41.832 73.2051 L
47.0605 73.2051 L
57.5195 62.7451 L
57.5195 57.5166 L
52.29 57.5166 L
41.832 67.9756 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
41.832 67.9756 m
41.832 73.2051 L
47.0605 73.2051 L
57.5195 62.7451 L
57.5195 57.5166 L
52.29 57.5166 L
41.832 67.9756 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
73.2031 47.0576 m
73.207 41.8311 L
67.9775 41.8311 L
57.5195 52.2881 L
57.5195 57.5166 L
62.748 57.5166 L
73.2031 47.0576 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
73.2031 47.0576 m
73.207 41.8311 L
67.9775 41.8311 L
57.5195 52.2881 L
57.5195 57.5166 L
62.748 57.5166 L
73.2031 47.0576 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
20.9141 26.1426 m
26.1436 26.1426 L
26.1436 20.9141 L
15.6855 10.457 L
10.457 10.457 L
10.457 15.6846 L
20.9141 26.1426 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
20.9141 26.1426 m
26.1436 26.1426 L
26.1436 20.9141 L
15.6855 10.457 L
10.457 10.457 L
10.457 15.6846 L
20.9141 26.1426 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
52.29 26.1426 m
57.5195 26.1426 L
57.5195 20.9141 L
47.0605 10.457 L
41.832 10.457 L
41.832 15.6846 L
52.29 26.1426 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
52.29 26.1426 m
57.5195 26.1426 L
57.5195 20.9141 L
47.0605 10.457 L
41.832 10.457 L
41.832 15.6846 L
52.29 26.1426 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
31.373 26.1426 m
26.1436 26.1426 L
26.1436 31.3721 L
36.6025 41.8311 L
41.832 41.8311 L
41.832 36.6006 L
31.373 26.1426 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
31.373 26.1426 m
26.1436 26.1426 L
26.1436 31.3721 L
36.6025 41.8311 L
41.832 41.8311 L
41.832 36.6006 L
31.373 26.1426 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
62.748 26.1426 m
57.5195 26.1426 L
57.5195 31.3721 L
67.9775 41.8311 L
73.207 41.8311 L
73.207 36.6006 L
62.748 26.1426 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
62.748 26.1426 m
57.5195 26.1426 L
57.5195 31.3721 L
67.9775 41.8311 L
73.207 41.8311 L
73.207 36.6006 L
62.748 26.1426 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
20.9141 57.5166 m
26.1436 57.5166 L
26.1436 52.2881 L
15.6855 41.8311 L
10.457 41.8311 L
10.457 47.0596 L
20.9141 57.5166 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
20.9141 57.5166 m
26.1436 57.5166 L
26.1436 52.2881 L
15.6855 41.8311 L
10.457 41.8311 L
10.457 47.0596 L
20.9141 57.5166 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
52.29 57.5166 m
57.5195 57.5166 L
57.5195 52.2881 L
47.0605 41.8311 L
41.832 41.8311 L
41.832 47.0596 L
52.29 57.5166 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
52.29 57.5166 m
57.5195 57.5166 L
57.5195 52.2881 L
47.0605 41.8311 L
41.832 41.8311 L
41.832 47.0596 L
52.29 57.5166 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
31.373 57.5166 m
26.1436 57.5166 L
26.1436 62.7461 L
36.6025 73.2051 L
41.832 73.2051 L
41.832 67.9756 L
31.373 57.5166 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
31.373 57.5166 m
26.1436 57.5166 L
26.1436 62.7461 L
36.6025 73.2051 L
41.832 73.2051 L
41.832 67.9756 L
31.373 57.5166 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.027344 0.152344 0 k
 0.03125 0.027344 0.152344 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
62.748 57.5166 m
57.5195 57.5166 L
57.5195 62.7461 L
67.9775 73.2051 L
73.207 73.2051 L
73.207 67.9756 L
62.748 57.5166 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.828125 0.648438 0.578125 0.695313 k
 0.828125 0.648438 0.578125 0.695313 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.6 w 4 M []0 d0 XR
62.748 57.5166 m
57.5195 57.5166 L
57.5195 62.7461 L
67.9775 73.2051 L
73.207 73.2051 L
73.207 67.9756 L
62.748 57.5166 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.640625 0.125 0.117188 0 k
 0.640625 0.125 0.117188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
10.457 36.6006 m
20.9141 26.1426 L
10.457 15.6846 L
0 26.1426 L
10.457 36.6006 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.148438 0.761719 0 k
 0.03125 0.148438 0.761719 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.832 36.6006 m
52.29 26.1426 L
41.832 15.6846 L
31.373 26.1426 L
41.832 36.6006 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.640625 0.125 0.117188 0 k
 0.640625 0.125 0.117188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
73.207 36.6006 m
83.665 26.1426 L
73.207 15.6846 L
62.748 26.1426 L
73.207 36.6006 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.023438 0.59375 0.910156 0 k
 0.023438 0.59375 0.910156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 52.2881 m
36.6025 41.8311 L
26.1436 31.3721 L
15.6855 41.8311 L
26.1436 52.2881 L
f
57.5195 52.2881 m
67.9775 41.8311 L
57.5195 31.3721 L
47.0605 41.8311 L
57.5195 52.2881 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.324219 0.574219 0.265625 0.007813 k
 0.324219 0.574219 0.265625 0.007813 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 20.9141 m
36.6025 10.457 L
26.1436 0 L
15.6855 10.457 L
26.1436 20.9141 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.292969 0.664063 0.761719 0.15625 k
 0.292969 0.664063 0.761719 0.15625 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
57.5195 20.9141 m
67.9775 10.457 L
57.5195 0 L
47.0605 10.457 L
57.5195 20.9141 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.339844 0.222656 0.96875 0.011719 k
 0.339844 0.222656 0.96875 0.011719 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
10.457 67.9756 m
20.9141 57.5166 L
10.457 47.0596 L
0 57.5166 L
10.457 67.9756 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.03125 0.148438 0.761719 0 k
 0.03125 0.148438 0.761719 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.832 67.9756 m
52.29 57.5166 L
41.832 47.0596 L
31.373 57.5166 L
41.832 67.9756 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.339844 0.222656 0.96875 0.011719 k
 0.339844 0.222656 0.96875 0.011719 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
73.207 67.9756 m
83.665 57.5166 L
73.207 47.0596 L
62.748 57.5166 L
73.207 67.9756 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.324219 0.574219 0.265625 0.007813 k
 0.324219 0.574219 0.265625 0.007813 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 83.6631 m
36.6025 73.2051 L
26.1436 62.7461 L
15.6855 73.2051 L
26.1436 83.6631 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.292969 0.664063 0.761719 0.15625 k
 0.292969 0.664063 0.761719 0.15625 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
57.5195 83.6631 m
67.9775 73.2051 L
57.5195 62.7461 L
47.0605 73.2051 L
57.5195 83.6631 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Sternenhimmel)
(Sternenhimmel) 12.1162 23.5117 156.1152 167.5127 [
%AI3_Tile
(0 O 0 R 0.933594 0.945313 0.046875 0.003906 k
 0.933594 0.945313 0.046875 0.003906 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
156.1152 23.5117 m
12.1162 23.5117 L
12.1162 167.5127 L
156.1152 167.5127 L
156.1152 23.5117 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.957031 0.917969 0.257813 0.167969 k
 0.957031 0.917969 0.257813 0.167969 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
115.6016 163.0479 m
112.2715 154.1709 l
103.6738 152.2285 l
110.8867 147.585 l
109 137.4131 l
116.4316 143.3555 l
123.8691 138.2158 l
121.6738 148.0635 l
128.082 153.8936 l
119.7617 154.7959 l
115.6016 163.0479 l
f
123.3457 160.666 m
115.3359 155.5957 l
107.3086 159.2393 l
110.2539 151.1836 l
102.6133 144.21 l
112.123 144.4619 l
114.9512 135.876 l
119.1445 145.0508 l
127.7734 145.8359 l
121.6855 151.5752 l
123.3457 160.666 l
f
75.9346 104.7144 m
72.6055 95.8379 l
64.0068 93.8945 l
71.2197 89.252 l
69.334 79.0801 l
76.7656 85.0215 l
84.2021 79.8828 l
82.0078 89.7305 l
88.415 95.5605 l
80.0947 96.4629 l
75.9346 104.7144 l
f
83.6797 102.3325 m
75.6699 97.2617 l
67.6426 100.9058 l
70.5879 92.8496 l
62.9463 85.877 l
72.457 86.1289 l
75.2842 77.543 l
79.4785 86.7168 l
88.1064 87.502 l
82.0186 93.2422 l
83.6797 102.3325 l
f
19.4834 139.7666 m
14.4902 126.4521 l
1.58984 123.54 l
12.4102 116.5732 l
9.58203 101.3154 l
20.7305 110.2295 l
31.8848 102.5186 l
28.5938 117.292 l
38.2041 126.0371 l
25.7236 127.3906 l
19.4834 139.7666 l
f
31.1016 136.1963 m
19.0859 128.5908 l
7.04492 134.0537 l
11.4629 121.9717 l
0 111.5107 l
14.2676 111.8877 l
18.5078 99.0107 l
24.7988 112.7725 l
37.7402 113.9502 l
28.6074 122.5576 l
31.1016 136.1963 l
f
122.8164 73.0996 m
117.8223 59.7852 l
104.9219 56.873 l
115.7422 49.9063 l
112.9141 34.6484 l
124.0625 43.5625 l
135.2168 35.8516 l
131.9258 50.625 l
141.5371 59.3711 l
129.0566 60.7246 l
122.8164 73.0996 l
f
134.4336 69.5293 m
122.418 61.9238 l
110.377 67.3867 l
114.7949 55.3047 l
103.332 44.8438 l
117.5996 45.2207 l
121.8398 32.3438 l
128.1309 46.1055 l
141.0723 47.2832 l
131.9395 55.8906 l
134.4336 69.5293 l
f
67.5449 138.5596 m
65.3252 132.6416 l
59.5928 131.3467 l
64.4014 128.251 l
63.1445 121.4697 l
68.0986 125.4316 l
73.0566 122.0049 l
71.5938 128.5703 l
75.8652 132.457 l
70.3184 133.0586 l
67.5449 138.5596 l
f
72.708 136.9717 m
67.3682 133.5918 l
62.0166 136.0205 l
63.9805 130.6504 l
58.8857 126.001 l
65.2266 126.1689 l
67.1113 120.4453 l
69.9072 126.5615 l
75.6592 127.085 l
71.6006 130.9111 l
72.708 136.9717 l
f
101.3555 127.2798 m
100.1807 124.147 l
97.1445 123.4614 l
99.6904 121.8208 l
99.0254 118.231 l
101.6484 120.3286 l
104.2734 118.5132 l
103.498 121.9897 l
105.7617 124.0483 l
102.8242 124.3667 l
101.3555 127.2798 l
f
104.0801 126.4399 m
101.2598 124.6382 l
98.4199 125.9116 l
99.4736 123.0728 l
96.7861 120.5991 l
100.1445 120.7026 l
101.1563 117.6763 l
102.6211 120.9224 l
105.666 121.2134 l
103.5078 123.23 l
104.0801 126.4399 l
f
124.8555 97.1133 m
123.6797 93.9805 l
120.6445 93.2949 l
123.1914 91.6543 l
122.5254 88.0645 l
125.1484 90.1621 l
127.7734 88.3467 l
126.998 91.8232 l
129.2617 93.8818 l
126.3242 94.2002 l
124.8555 97.1133 l
f
127.5801 96.2734 m
124.7598 94.4717 l
121.9199 95.7451 l
122.9746 92.9063 l
120.2871 90.4326 l
123.6445 90.5361 l
124.6563 87.5098 l
126.1211 90.7559 l
129.166 91.0469 l
127.0078 93.0635 l
127.5801 96.2734 l
f
35.8564 64.4473 m
34.6807 61.3145 l
31.6455 60.6289 l
34.1914 58.9883 l
33.5254 55.3984 l
36.1494 57.4961 l
38.7734 55.6797 l
37.999 59.1563 l
40.2617 61.2148 l
37.3242 61.5332 l
35.8564 64.4473 l
f
38.5801 63.6074 m
35.7607 61.8047 l
32.9209 63.0781 l
33.9746 60.2402 l
31.2871 57.7656 l
34.6455 57.8691 l
35.6572 54.8438 l
37.1221 58.0898 l
40.167 58.3809 l
38.0078 60.3965 l
38.5801 63.6074 l
f
56.3896 162.7705 m
55.2139 159.6377 l
52.1787 158.9521 l
54.7246 157.3115 l
54.0586 153.7217 l
56.6826 155.8193 l
59.3066 154.0039 l
58.5322 157.4805 l
60.7949 159.5391 l
57.8574 159.8574 l
56.3896 162.7705 l
f
59.1133 161.9307 m
56.2939 160.1289 l
53.4541 161.4023 l
54.5078 158.5635 l
51.8203 156.0898 l
55.1787 156.1934 l
56.1904 153.167 l
57.6553 156.4131 l
60.7002 156.7041 l
58.541 158.7207 l
59.1133 161.9307 l
f
59.1523 38.6582 m
57.9766 35.5254 l
54.9414 34.8398 l
57.4873 33.1992 l
56.8213 29.6094 l
59.4453 31.707 l
62.0693 29.8906 l
61.2949 33.3672 l
63.5576 35.4258 l
60.6201 35.7441 l
59.1523 38.6582 l
f
61.876 37.8184 m
59.0566 36.0156 l
56.2168 37.2891 l
57.2705 34.4512 l
54.583 31.9766 l
57.9414 32.0801 l
58.9531 29.0547 l
60.418 32.3008 l
63.4629 32.5918 l
61.3037 34.6074 l
61.876 37.8184 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
32.9385 129.6792 m
31.5186 125.8916 l
27.8496 125.0635 l
30.9268 123.0815 l
30.1221 118.7412 l
33.293 121.2769 l
36.4658 119.084 l
35.5293 123.2856 l
38.2637 125.7734 l
34.7139 126.1582 l
32.9385 129.6792 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
36.2432 128.6631 m
32.8252 126.5 l
29.4004 128.0537 l
30.6572 124.6172 l
27.3965 121.6416 l
31.4551 121.749 l
32.6611 118.0859 l
34.4502 122.001 l
38.1318 122.335 l
35.5342 124.7842 l
36.2432 128.6631 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
142.5566 58.4941 m
141.1367 54.7051 l
137.4668 53.877 l
140.5449 51.8965 l
139.7402 47.5547 l
142.9102 50.0918 l
146.084 47.8984 l
145.1465 52.0996 l
147.8809 54.5879 l
144.332 54.9727 l
142.5566 58.4941 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
145.8613 57.4766 m
142.4434 55.3145 l
139.0176 56.8672 l
140.2754 53.4316 l
137.0137 50.4551 l
141.0723 50.5625 l
142.2793 46.9004 l
144.0684 50.8145 l
147.75 51.1484 l
145.1523 53.5977 l
145.8613 57.4766 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
12.5322 165.9844 m
10.4033 160.3027 l
4.89941 159.0605 l
9.51465 156.0879 l
8.30762 149.5771 l
13.0654 153.3809 l
17.8232 150.0918 l
16.4199 156.3936 l
20.5205 160.126 l
15.1963 160.7031 l
12.5322 165.9844 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
17.4893 164.46 m
12.3623 161.2158 l
7.22559 163.5459 l
9.11035 158.3916 l
4.21973 153.9277 l
10.3076 154.0889 l
12.1172 148.5947 l
14.8008 154.4668 l
20.3232 154.9678 l
16.4268 158.6416 l
17.4893 164.46 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
89.6924 118.96 m
87.5635 113.2783 l
82.0586 112.0361 l
86.6738 109.0635 l
85.4668 102.5527 l
90.2256 106.3564 l
94.9824 103.0674 l
93.5781 109.3691 l
97.6807 113.1016 l
92.3555 113.6787 l
89.6924 118.96 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
94.6484 117.4355 m
89.5225 114.1914 l
84.3848 116.5215 l
86.2695 111.3672 l
81.3789 106.9033 l
87.4678 107.0645 l
89.2764 101.5703 l
91.96 107.4424 l
97.4824 107.9434 l
93.5859 111.6172 l
94.6484 117.4355 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
122.6445 147.3584 m
120.8691 142.624 l
116.2832 141.5889 l
120.1289 139.1123 l
119.123 133.6865 l
123.0879 136.8564 l
127.0527 134.1152 l
125.8828 139.3672 l
129.3008 142.4766 l
124.8633 142.958 l
122.6445 147.3584 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
126.7754 146.0889 m
122.502 143.3848 l
118.2207 145.3271 l
119.793 141.0313 l
115.7168 137.3115 l
120.7891 137.4463 l
122.2969 132.8672 l
124.5332 137.7607 l
129.1348 138.1787 l
125.8887 141.2402 l
126.7754 146.0889 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.957031 0.917969 0.257813 0.167969 k
 0.957031 0.917969 0.257813 0.167969 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.376 68.1094 m
89.1563 62.1914 l
83.4238 60.8965 l
88.2324 57.8008 l
86.9756 51.0195 l
91.9297 54.9805 l
96.8867 51.5547 l
95.4238 58.1191 l
99.6963 62.0059 l
94.1484 62.6074 l
91.376 68.1094 l
f
96.5391 66.5215 m
91.1992 63.1406 l
85.8477 65.5703 l
87.8115 60.1992 l
82.7168 55.5508 l
89.0576 55.7188 l
90.9424 49.9941 l
93.7383 56.1113 l
99.4893 56.6348 l
95.4307 60.4609 l
96.5391 66.5215 l
f
36.2021 161.1553 m
33.9824 155.2373 l
28.25 153.9424 l
33.0586 150.8467 l
31.8018 144.0654 l
36.7559 148.0273 l
41.7139 144.6006 l
40.251 151.166 l
44.5225 155.0527 l
38.9756 155.6543 l
36.2021 161.1553 l
f
41.3652 159.5674 m
36.0254 156.1875 l
30.6738 158.6162 l
32.6377 153.2461 l
27.543 148.5967 l
33.8838 148.7646 l
35.7686 143.041 l
38.5645 149.1572 l
44.3164 149.6807 l
40.2578 153.5068 l
41.3652 159.5674 l
f
146.707 172.1509 m
144.4863 166.2329 l
138.7539 164.938 l
143.5625 161.8423 l
142.3066 155.061 l
147.2598 159.0229 l
152.2188 155.5962 l
150.7559 162.1616 l
155.0273 166.0483 l
149.4805 166.6499 l
146.707 172.1509 l
f
151.8691 170.563 m
146.5293 167.1831 l
141.1777 169.6118 l
143.1426 164.2417 l
138.0469 159.5923 l
144.3887 159.7603 l
146.2734 154.0366 l
149.0684 160.1528 l
154.8203 160.6763 l
150.7617 164.5024 l
151.8691 170.563 l
f
15.9785 53.4004 m
12.6494 44.5234 l
4.0498 42.582 l
11.2627 37.9375 l
9.37793 27.7656 l
16.8096 33.709 l
24.2461 28.5684 l
22.0518 38.418 l
28.459 44.248 l
20.1387 45.1504 l
15.9785 53.4004 l
f
23.7236 51.0195 m
15.7139 45.9492 l
7.68652 49.5918 l
10.6318 41.5371 l
2.98926 34.5625 l
12.501 34.8145 l
15.3281 26.2305 l
19.5225 35.4043 l
28.1494 36.1895 l
22.0615 41.9277 l
23.7236 51.0195 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.9785 61.0605 m
77.7588 55.1426 l
72.0264 53.8477 l
76.835 50.752 l
75.5781 43.9707 l
80.5322 47.9336 l
85.4902 44.5059 l
84.0273 51.0723 l
88.2988 54.959 l
82.752 55.5605 l
79.9785 61.0605 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
85.1416 59.4727 m
79.8018 56.0938 l
74.4502 58.5215 l
76.4141 53.1523 l
71.3193 48.502 l
77.6602 48.6699 l
79.5449 42.9473 l
82.3408 49.0625 l
88.0928 49.5859 l
84.0342 53.4121 l
85.1416 59.4727 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
105.3945 186.4556 m
100.1924 172.5864 l
86.7559 169.5503 l
98.0264 162.2954 l
95.0811 146.4019 l
106.6914 155.687 l
118.3125 147.6558 l
114.8828 163.0425 l
124.8945 172.1528 l
111.8945 173.563 l
105.3945 186.4556 l
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
117.4941 182.7339 m
104.9785 174.811 l
92.4395 180.5044 l
97.042 167.9185 l
85.0996 157.022 l
99.96 157.4155 l
104.3789 143.9995 l
110.9297 158.3354 l
124.4121 159.562 l
114.9004 168.5298 l
117.4941 182.7339 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
105.3945 42.4551 m
100.1924 28.5859 l
86.7559 25.5508 l
98.0264 18.2949 l
95.0811 2.40234 l
106.6914 11.6875 l
118.3125 3.65625 l
114.8828 19.043 l
124.8945 28.1523 l
111.8945 29.5625 l
105.3945 42.4551 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
117.4941 38.7344 m
104.9785 30.8105 l
92.4395 36.5039 l
97.042 23.918 l
85.0996 13.0215 l
99.96 13.416 l
104.3789 0 l
110.9297 14.3359 l
124.4121 15.5625 l
114.9004 24.5293 l
117.4941 38.7344 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
16.9229 90.0479 m
13.5928 81.1709 l
4.99414 79.2285 l
12.207 74.584 l
10.3223 64.4121 l
17.7529 70.3555 l
25.1904 65.2148 l
22.9951 75.0625 l
29.4033 80.8936 l
21.083 81.7959 l
16.9229 90.0479 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
24.667 87.666 m
16.6572 82.5957 l
8.63086 86.2393 l
11.5762 78.1836 l
3.93359 71.209 l
13.4443 71.4609 l
16.2725 62.875 l
20.4658 72.0508 l
29.0947 72.8359 l
23.0068 78.5762 l
24.667 87.666 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.957031 0.917969 0.257813 0.167969 k
 0.957031 0.917969 0.257813 0.167969 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
163.4824 139.7666 m
158.4902 126.4521 l
145.5898 123.54 l
156.4102 116.5732 l
153.582 101.3154 l
164.7305 110.2295 l
175.8848 102.5186 l
172.5938 117.292 l
182.2031 126.0371 l
169.7227 127.3906 l
163.4824 139.7666 l
f
175.1016 136.1963 m
163.0859 128.5908 l
151.0449 134.0537 l
155.4629 121.9717 l
144 111.5107 l
158.2676 111.8877 l
162.5078 99.0107 l
168.7988 112.7725 l
181.7402 113.9502 l
172.6074 122.5576 l
175.1016 136.1963 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
156.5313 165.9844 m
154.4023 160.3027 l
148.8984 159.0605 l
153.5137 156.0879 l
152.3066 149.5771 l
157.0645 153.3809 l
161.8223 150.0918 l
160.4199 156.3936 l
164.5195 160.126 l
159.1953 160.7031 l
156.5313 165.9844 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
161.4883 164.46 m
156.3613 161.2158 l
151.2246 163.5459 l
153.1094 158.3916 l
148.2188 153.9277 l
154.3066 154.0889 l
156.1172 148.5947 l
158.8008 154.4668 l
164.3223 154.9678 l
160.4258 158.6416 l
161.4883 164.46 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.957031 0.917969 0.257813 0.167969 k
 0.957031 0.917969 0.257813 0.167969 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
159.9785 53.4004 m
156.6484 44.5234 l
148.0488 42.582 l
155.2617 37.9375 l
153.377 27.7656 l
160.8086 33.709 l
168.2461 28.5684 l
166.0508 38.418 l
172.459 44.248 l
164.1387 45.1504 l
159.9785 53.4004 l
f
167.7227 51.0195 m
159.7129 45.9492 l
151.6855 49.5918 l
154.6309 41.5371 l
146.9883 34.5625 l
156.5 34.8145 l
159.3281 26.2305 l
163.5215 35.4043 l
172.1484 36.1895 l
166.0605 41.9277 l
167.7227 51.0195 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
160.9219 90.0479 m
157.5918 81.1709 l
148.9941 79.2285 l
156.207 74.584 l
154.3223 64.4121 l
161.752 70.3555 l
169.1895 65.2148 l
166.9941 75.0625 l
173.4023 80.8936 l
165.082 81.7959 l
160.9219 90.0479 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
168.666 87.666 m
160.6563 82.5957 l
152.6309 86.2393 l
155.5762 78.1836 l
147.9336 71.209 l
157.4434 71.4609 l
160.2715 62.875 l
164.4648 72.0508 l
173.0938 72.8359 l
167.0059 78.5762 l
168.666 87.666 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.4912 155.3271 m
42.0713 151.5396 l
38.4023 150.7114 l
41.4795 148.7295 l
40.6748 144.3892 l
43.8457 146.9248 l
47.0186 144.7319 l
46.082 148.9336 l
48.8164 151.4214 l
45.2666 151.8062 l
43.4912 155.3271 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
46.7959 154.311 m
43.3779 152.1479 l
39.9531 153.7017 l
41.21 150.2651 l
37.9492 147.2896 l
42.0078 147.397 l
43.2139 143.7339 l
45.0029 147.6489 l
48.6846 147.9829 l
46.0869 150.4321 l
46.7959 154.311 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
65.4951 172.0752 m
64.0752 168.2876 l
60.4063 167.4595 l
63.4834 165.4775 l
62.6787 161.1372 l
65.8496 163.6729 l
69.0225 161.48 l
68.0859 165.6816 l
70.8203 168.1694 l
67.2705 168.5542 l
65.4951 172.0752 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
68.7998 171.0591 m
65.3818 168.896 l
61.957 170.4497 l
63.2139 167.0132 l
59.9531 164.0376 l
64.0117 164.145 l
65.2178 160.4819 l
67.0068 164.397 l
70.6885 164.731 l
68.0908 167.1802 l
68.7998 171.0591 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.957031 0.917969 0.257813 0.167969 k
 0.957031 0.917969 0.257813 0.167969 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
146.707 28.1504 m
144.4863 22.2324 l
138.7539 20.9375 l
143.5625 17.8418 l
142.3066 11.0605 l
147.2598 15.0234 l
152.2188 11.5957 l
150.7559 18.1621 l
155.0273 22.0488 l
149.4805 22.6504 l
146.707 28.1504 l
f
151.8691 26.5625 m
146.5293 23.1836 l
141.1777 25.6113 l
143.1426 20.2422 l
138.0469 15.5918 l
144.3887 15.7598 l
146.2734 10.0371 l
149.0684 16.1523 l
154.8203 16.6758 l
150.7617 20.502 l
151.8691 26.5625 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
65.4951 28.0742 m
64.0752 24.2871 l
60.4063 23.459 l
63.4834 21.4766 l
62.6787 17.1367 l
65.8496 19.6719 l
69.0225 17.4805 l
68.0859 21.6816 l
70.8203 24.1699 l
67.2705 24.5547 l
65.4951 28.0742 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
68.7998 27.0586 m
65.3818 24.8965 l
61.957 26.4492 l
63.2139 23.0137 l
59.9531 20.0371 l
64.0117 20.1445 l
65.2178 16.4824 l
67.0068 20.3965 l
70.6885 20.7305 l
68.0908 23.1797 l
68.7998 27.0586 l
f
82.1064 150.958 m
81.166 148.4517 l
78.7373 147.9033 l
80.7744 146.5913 l
80.2412 143.7192 l
82.3408 145.397 l
84.4404 143.9453 l
83.8203 146.7266 l
85.6309 148.373 l
83.2803 148.6279 l
82.1064 150.958 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
84.2852 150.2866 m
82.0293 148.8452 l
79.7578 149.8638 l
80.6006 147.5923 l
78.4512 145.6138 l
81.1377 145.6968 l
81.9473 143.2759 l
83.1191 145.8726 l
85.5547 146.105 l
83.8271 147.7183 l
84.2852 150.2866 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.4395 80.291 m
90.499 77.7852 l
88.0713 77.2363 l
90.1074 75.9238 l
89.5742 73.0527 l
91.6729 74.7305 l
93.7725 73.2793 l
93.1523 76.0605 l
94.9639 77.707 l
92.6143 77.9609 l
91.4395 80.291 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
93.6182 79.6191 m
91.3623 78.1777 l
89.0908 79.1973 l
89.9336 76.9258 l
87.7842 74.9473 l
90.4707 75.0293 l
91.2803 72.6094 l
92.4512 75.2051 l
94.8867 75.4375 l
93.1602 77.0508 l
93.6182 79.6191 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
52.3281 63.1484 m
51.3877 60.6426 l
48.96 60.0938 l
50.9961 58.7813 l
50.4629 55.9102 l
52.5625 57.5879 l
54.6621 56.1367 l
54.042 58.918 l
55.8525 60.5645 l
53.5029 60.8184 l
52.3281 63.1484 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
54.5068 62.4766 m
52.251 61.0352 l
49.9795 62.0547 l
50.8223 59.7832 l
48.6729 57.8047 l
51.3594 57.8867 l
52.1689 55.4668 l
53.3408 58.0625 l
55.7764 58.2949 l
54.0498 59.9082 l
54.5068 62.4766 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.6611 41.1484 m
19.7207 38.6426 l
17.293 38.0938 l
19.3291 36.7813 l
18.7959 33.9102 l
20.8955 35.5879 l
22.9951 34.1367 l
22.375 36.918 l
24.1855 38.5645 l
21.8359 38.8184 l
20.6611 41.1484 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.8398 40.4766 m
20.584 39.0352 l
18.3125 40.0547 l
19.1553 37.7832 l
17.0059 35.8047 l
19.6924 35.8867 l
20.502 33.4668 l
21.6738 36.0625 l
24.1094 36.2949 l
22.3828 37.9082 l
22.8398 40.4766 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.3672 102.0518 m
18.4268 99.5449 l
15.999 98.9971 l
18.0352 97.6855 l
17.502 94.8125 l
19.6016 96.4902 l
21.7012 95.0391 l
21.0811 97.8203 l
22.8916 99.4668 l
20.542 99.7217 l
19.3672 102.0518 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
21.5459 101.3804 m
19.29 99.9395 l
17.0186 100.9575 l
17.8613 98.6855 l
15.7119 96.707 l
18.3984 96.791 l
19.208 94.3691 l
20.3799 96.9668 l
22.8154 97.1992 l
21.0889 98.8125 l
21.5459 101.3804 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
42.7139 40.3477 m
41.5381 37.2148 l
38.5029 36.5293 l
41.0498 34.8887 l
40.3838 31.2988 l
43.0068 33.3965 l
45.6318 31.582 l
44.8564 35.0586 l
47.1201 37.1172 l
44.1826 37.4355 l
42.7139 40.3477 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
45.4385 39.5078 m
42.6182 37.707 l
39.7783 38.9805 l
40.833 36.1406 l
38.1455 33.668 l
41.5029 33.7715 l
42.5146 30.7441 l
43.9795 33.9902 l
47.0244 34.2813 l
44.8662 36.2988 l
45.4385 39.5078 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
145.1484 145.4951 m
143.9727 142.3623 l
140.9375 141.6768 l
143.4844 140.0361 l
142.8184 136.4463 l
145.4414 138.5439 l
148.0664 136.7285 l
147.291 140.2051 l
149.5547 142.2637 l
146.6172 142.582 l
145.1484 145.4951 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
147.873 144.6553 m
145.0527 142.8535 l
142.2129 144.127 l
143.2676 141.2881 l
140.5801 138.8145 l
143.9375 138.918 l
144.9492 135.8916 l
146.4141 139.1377 l
149.459 139.4287 l
147.3008 141.4453 l
147.873 144.6553 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
49.0967 110.0874 m
48.1563 107.5811 l
45.7285 107.0327 l
47.7646 105.7207 l
47.2314 102.8486 l
49.3311 104.5264 l
51.4307 103.0747 l
50.8115 105.856 l
52.6211 107.5024 l
50.2715 107.7573 l
49.0967 110.0874 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.2764 109.416 m
49.0205 107.9746 l
46.749 108.9932 l
47.5908 106.7217 l
45.4414 104.7432 l
48.1279 104.8262 l
48.9375 102.4053 l
50.1094 105.002 l
52.5459 105.2344 l
50.8184 106.8477 l
51.2764 109.416 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117188 0.191406 0.917969 0 k
 0.117188 0.191406 0.917969 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
137.957 121.3267 m
137.3984 119.8364 l
135.9531 119.5103 l
137.1641 118.7305 l
136.8477 117.0229 l
138.0957 118.02 l
139.3438 117.1572 l
138.9766 118.8105 l
140.0527 119.7896 l
138.6543 119.9409 l
137.957 121.3267 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
139.0059 121.0923 m
137.793 120.061 l
136.373 120.479 l
137.0527 119.2085 l
135.9453 117.8696 l
137.5195 118.1353 l
138.1914 116.7739 l
138.6738 118.397 l
140.0898 118.73 l
138.9434 119.5415 l
139.0059 121.0923 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117188 0.191406 0.917969 0 k
 0.117188 0.191406 0.917969 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
39.582 101.3682 m
39.0234 99.8779 l
37.5791 99.5518 l
38.79 98.7715 l
38.4736 97.0645 l
39.7217 98.0615 l
40.9697 97.1992 l
40.6016 98.8516 l
41.6777 99.8311 l
40.2803 99.9824 l
39.582 101.3682 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.6318 101.1338 m
39.4189 100.1025 l
37.999 100.5205 l
38.6777 99.25 l
37.5703 97.9111 l
39.1455 98.1768 l
39.8174 96.8154 l
40.2988 98.4385 l
41.7158 98.7715 l
40.5684 99.583 l
40.6318 101.1338 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117188 0.191406 0.917969 0 k
 0.117188 0.191406 0.917969 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.582 70.0352 m
37.0234 68.5449 l
35.5791 68.2188 l
36.79 67.4395 l
36.4736 65.7305 l
37.7217 66.7285 l
38.9697 65.8652 l
38.6016 67.5195 l
39.6777 68.498 l
38.2803 68.6484 l
37.582 70.0352 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
38.6318 69.8008 m
37.4189 68.7695 l
35.999 69.1875 l
36.6777 67.916 l
35.5703 66.5781 l
37.1455 66.8438 l
37.8174 65.4824 l
38.2988 67.1055 l
39.7158 67.4375 l
38.5684 68.25 l
38.6318 69.8008 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117188 0.191406 0.917969 0 k
 0.117188 0.191406 0.917969 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
70.624 133.6597 m
70.0654 132.1694 l
68.6211 131.8433 l
69.832 131.0635 l
69.5156 129.356 l
70.7637 130.353 l
72.0117 129.4902 l
71.6436 131.1436 l
72.7197 132.1226 l
71.3223 132.2739 l
70.624 133.6597 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
71.6738 133.4253 m
70.4609 132.394 l
69.041 132.812 l
69.7197 131.5415 l
68.6123 130.2026 l
70.1875 130.4683 l
70.8594 129.1069 l
71.3408 130.73 l
72.7578 131.063 l
71.6104 131.8745 l
71.6738 133.4253 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117188 0.191406 0.917969 0 k
 0.117188 0.191406 0.917969 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
108.957 90.9932 m
108.3984 89.5029 l
106.9531 89.1768 l
108.1641 88.3965 l
107.8477 86.6895 l
109.0957 87.6865 l
110.3438 86.8242 l
109.9766 88.4766 l
111.0527 89.4561 l
109.6543 89.6074 l
108.957 90.9932 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.050781 0.074219 0.480469 0 k
 0.050781 0.074219 0.480469 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
110.0059 90.7588 m
108.793 89.7275 l
107.373 90.1455 l
108.0527 88.875 l
106.9453 87.5361 l
108.5195 87.8018 l
109.1914 86.4404 l
109.6738 88.0635 l
111.0898 88.3965 l
109.9434 89.208 l
110.0059 90.7588 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
144.7988 39.2598 m
144.4023 38.2031 l
143.3789 37.9727 l
144.2363 37.4199 l
144.0117 36.209 l
144.8965 36.916 l
145.7813 36.3047 l
145.5215 37.4766 l
146.2832 38.1699 l
145.293 38.2773 l
144.7988 39.2598 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
145.7598 38.9297 m
144.7813 38.3711 l
143.8457 38.8457 l
144.1523 37.8711 l
143.207 37.084 l
144.3398 37.0625 l
144.6309 36.0273 l
145.1777 37.0957 l
146.207 37.1426 l
145.5137 37.8594 l
145.7598 38.9297 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
69.1855 115.7788 m
68.79 114.7231 l
67.7666 114.4922 l
68.624 113.939 l
68.3994 112.729 l
69.2842 113.436 l
70.1689 112.8242 l
69.9082 113.9961 l
70.6709 114.6899 l
69.6807 114.7974 l
69.1855 115.7788 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
70.1465 115.4502 m
69.168 114.8906 l
68.2334 115.3652 l
68.54 114.3916 l
67.5947 113.6035 l
68.7275 113.583 l
69.0176 112.5479 l
69.5645 113.6162 l
70.5947 113.6631 l
69.9014 114.3789 l
70.1465 115.4502 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.0244 145.2852 m
17.6289 144.2295 l
16.6055 143.9985 l
17.4629 143.4453 l
17.2383 142.2354 l
18.123 142.9424 l
19.0078 142.3306 l
18.7471 143.5024 l
19.5098 144.1963 l
18.5195 144.3037 l
18.0244 145.2852 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.9854 144.9565 m
18.0068 144.397 l
17.0723 144.8716 l
17.3789 143.8979 l
16.4336 143.1099 l
17.5664 143.0894 l
17.8564 142.0542 l
18.4033 143.1226 l
19.4336 143.1694 l
18.7402 143.8853 l
18.9854 144.9565 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.0459 166.3921 m
33.6504 165.3364 l
32.627 165.1055 l
33.4844 164.5522 l
33.2598 163.3423 l
34.1445 164.0493 l
35.0293 163.4375 l
34.7686 164.6094 l
35.5313 165.3032 l
34.541 165.4106 l
34.0459 166.3921 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
35.0068 166.0635 m
34.0283 165.5039 l
33.0938 165.9785 l
33.4004 165.0049 l
32.4551 164.2168 l
33.5879 164.1963 l
33.8779 163.1611 l
34.4248 164.2295 l
35.4551 164.2764 l
34.7617 164.9922 l
35.0068 166.0635 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
138.0254 71.2852 m
137.6289 70.2285 l
136.6055 69.998 l
137.4629 69.4453 l
137.2383 68.2344 l
138.123 68.9414 l
139.0078 68.3301 l
138.748 69.502 l
139.5098 70.1953 l
138.5195 70.3027 l
138.0254 71.2852 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
138.9863 70.957 m
138.0078 70.3965 l
137.0723 70.8711 l
137.3789 69.8984 l
136.4336 69.1094 l
137.5664 69.0898 l
137.8574 68.0547 l
138.4043 69.123 l
139.4336 69.1699 l
138.7402 69.8848 l
138.9863 70.957 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
37.3584 46.6172 m
36.9629 45.5625 l
35.9395 45.332 l
36.7969 44.7773 l
36.5723 43.5684 l
37.457 44.2754 l
38.3418 43.6641 l
38.0811 44.8359 l
38.8438 45.5293 l
37.8535 45.6367 l
37.3584 46.6172 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
38.3193 46.2891 m
37.3408 45.7305 l
36.4063 46.2051 l
36.7129 45.2305 l
35.7676 44.4434 l
36.9004 44.4219 l
37.1904 43.3867 l
37.7373 44.4551 l
38.7676 44.502 l
38.0742 45.2188 l
38.3193 46.2891 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.6914 143.9517 m
51.2959 142.896 l
50.2725 142.665 l
51.1299 142.1118 l
50.9053 140.9019 l
51.79 141.6089 l
52.6748 140.9971 l
52.4141 142.1689 l
53.1768 142.8628 l
52.1865 142.9702 l
51.6914 143.9517 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
52.6523 143.623 m
51.6738 143.0635 l
50.7393 143.5381 l
51.0459 142.5645 l
50.1006 141.7764 l
51.2334 141.7559 l
51.5234 140.7207 l
52.0703 141.7891 l
53.1006 141.8359 l
52.4072 142.5518 l
52.6523 143.623 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
68.5801 33.8086 m
68.085 32.4883 l
66.8057 32.1992 l
67.8789 31.5078 l
67.5977 29.9961 l
68.7041 30.8789 l
69.8096 30.1152 l
69.4834 31.5801 l
70.4365 32.4473 l
69.1982 32.5801 l
68.5801 33.8086 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
69.7813 33.3965 m
68.5576 32.6973 l
67.3887 33.291 l
67.7734 32.0742 l
66.5908 31.0879 l
68.0068 31.0625 l
68.3701 29.7695 l
69.0537 31.1055 l
70.3408 31.1641 l
69.4746 32.0586 l
69.7813 33.3965 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
110.1992 65.0996 m
109.7051 63.7793 l
108.4258 63.4922 l
109.498 62.8008 l
109.2168 61.2871 l
110.3242 62.1719 l
111.4297 61.4063 l
111.1035 62.8711 l
112.0566 63.7383 l
110.8184 63.873 l
110.1992 65.0996 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
111.4004 64.6895 m
110.1777 63.9902 l
109.0078 64.582 l
109.3926 63.3652 l
108.2109 62.3809 l
109.627 62.3555 l
109.9902 61.0605 l
110.6738 62.3965 l
111.9609 62.4551 l
111.0938 63.3496 l
111.4004 64.6895 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
132.9121 157.3745 m
132.418 156.0542 l
131.1387 155.7661 l
132.2109 155.0747 l
131.9297 153.562 l
133.0371 154.4458 l
134.1426 153.6812 l
133.8164 155.146 l
134.7695 156.0132 l
133.5313 156.147 l
132.9121 157.3745 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
134.1133 156.9634 m
132.8906 156.2642 l
131.7207 156.8569 l
132.1055 155.6401 l
130.9238 154.6548 l
132.3398 154.6294 l
132.7031 153.3354 l
133.3867 154.6714 l
134.6738 154.73 l
133.8066 155.6245 l
134.1133 156.9634 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
71.0693 87.4355 m
70.5742 86.1152 l
69.2949 85.8281 l
70.3682 85.1367 l
70.0869 83.623 l
71.1934 84.5078 l
72.2988 83.7422 l
71.9727 85.207 l
72.9258 86.0742 l
71.6875 86.209 l
71.0693 87.4355 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
72.2705 87.0254 m
71.0469 86.3262 l
69.8779 86.918 l
70.2627 85.7012 l
69.0801 84.7168 l
70.4961 84.6914 l
70.8594 83.3965 l
71.543 84.7324 l
72.8301 84.791 l
71.9639 85.6855 l
72.2705 87.0254 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.066406 0.015625 0.367188 0 k
 0.066406 0.015625 0.367188 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
21.3193 114.7842 m
20.9229 113.7285 l
19.9004 113.4976 l
20.7578 112.9443 l
20.5332 111.7344 l
21.418 112.4414 l
22.3027 111.8296 l
22.042 113.0015 l
22.8047 113.6953 l
21.8145 113.8027 l
21.3193 114.7842 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 0 0 k
 0 0 0 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.2803 114.4556 m
21.3018 113.896 l
20.3662 114.3706 l
20.6738 113.397 l
19.7285 112.6089 l
20.8613 112.5884 l
21.1514 111.5532 l
21.6982 112.6216 l
22.7285 112.6685 l
22.0352 113.3843 l
22.2803 114.4556 l
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.039063 0.011719 0.160156 0 k
 0.039063 0.011719 0.160156 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.3867 146.397 m
64.3867 146.1206 64.1631 145.897 63.8867 145.897 c
63.6104 145.897 63.3867 146.1206 63.3867 146.397 c
63.3867 146.6733 63.6104 146.897 63.8867 146.897 c
64.1631 146.897 64.3867 146.6733 64.3867 146.397 c
f
99.0068 134.73 m
99.0068 134.4536 98.7842 134.23 98.5068 134.23 c
98.2305 134.23 98.0068 134.4536 98.0068 134.73 c
98.0068 135.0063 98.2305 135.23 98.5068 135.23 c
98.7842 135.23 99.0068 135.0063 99.0068 134.73 c
f
30.6738 136.73 m
30.6738 136.4536 30.4502 136.23 30.1738 136.23 c
29.8975 136.23 29.6738 136.4536 29.6738 136.73 c
29.6738 137.0063 29.8975 137.23 30.1738 137.23 c
30.4502 137.23 30.6738 137.0063 30.6738 136.73 c
f
48.0068 160.397 m
48.0068 160.1206 47.7832 159.897 47.5068 159.897 c
47.2305 159.897 47.0068 160.1206 47.0068 160.397 c
47.0068 160.6733 47.2305 160.897 47.5068 160.897 c
47.7832 160.897 48.0068 160.6733 48.0068 160.397 c
f
25.6738 95.3965 m
25.6738 95.1211 25.4502 94.8965 25.1738 94.8965 c
24.8975 94.8965 24.6738 95.1211 24.6738 95.3965 c
24.6738 95.6738 24.8975 95.8965 25.1738 95.8965 c
25.4502 95.8965 25.6738 95.6738 25.6738 95.3965 c
f
64.6738 97.0635 m
64.6738 96.7871 64.4502 96.5635 64.1738 96.5635 c
63.8975 96.5635 63.6738 96.7871 63.6738 97.0635 c
63.6738 97.3398 63.8975 97.5635 64.1738 97.5635 c
64.4502 97.5635 64.6738 97.3398 64.6738 97.0635 c
f
90.0078 94.0635 m
90.0078 93.7871 89.7842 93.5635 89.5078 93.5635 c
89.2314 93.5635 89.0078 93.7871 89.0078 94.0635 c
89.0078 94.3398 89.2314 94.5635 89.5078 94.5635 c
89.7842 94.5635 90.0078 94.3398 90.0078 94.0635 c
f
72.0068 70.0625 m
72.0068 69.7871 71.7832 69.5625 71.5068 69.5625 c
71.2305 69.5625 71.0068 69.7871 71.0068 70.0625 c
71.0068 70.3398 71.2305 70.5625 71.5068 70.5625 c
71.7832 70.5625 72.0068 70.3398 72.0068 70.0625 c
f
45.6738 66.7305 m
45.6738 66.4531 45.4502 66.2305 45.1738 66.2305 c
44.8975 66.2305 44.6738 66.4531 44.6738 66.7305 c
44.6738 67.0059 44.8975 67.2305 45.1738 67.2305 c
45.4502 67.2305 45.6738 67.0059 45.6738 66.7305 c
f
24.0068 57.0625 m
24.0068 56.7871 23.7832 56.5625 23.5068 56.5625 c
23.2305 56.5625 23.0068 56.7871 23.0068 57.0625 c
23.0068 57.3398 23.2305 57.5625 23.5068 57.5625 c
23.7832 57.5625 24.0068 57.3398 24.0068 57.0625 c
f
54.6738 46.7305 m
54.6738 46.4531 54.4502 46.2305 54.1738 46.2305 c
53.8975 46.2305 53.6738 46.4531 53.6738 46.7305 c
53.6738 47.0059 53.8975 47.2305 54.1738 47.2305 c
54.4502 47.2305 54.6738 47.0059 54.6738 46.7305 c
f
31.0068 31.7305 m
31.0068 31.4531 30.7832 31.2305 30.5068 31.2305 c
30.2305 31.2305 30.0068 31.4531 30.0068 31.7305 c
30.0068 32.0059 30.2305 32.2305 30.5068 32.2305 c
30.7832 32.2305 31.0068 32.0059 31.0068 31.7305 c
f
55.3408 28.0625 m
55.3408 27.7871 55.1172 27.5625 54.8408 27.5625 c
54.5645 27.5625 54.3408 27.7871 54.3408 28.0625 c
54.3408 28.3398 54.5645 28.5625 54.8408 28.5625 c
55.1172 28.5625 55.3408 28.3398 55.3408 28.0625 c
f
105.0078 49.7305 m
105.0078 49.4531 104.7832 49.2305 104.5078 49.2305 c
104.2305 49.2305 104.0078 49.4531 104.0078 49.7305 c
104.0078 50.0059 104.2305 50.2305 104.5078 50.2305 c
104.7832 50.2305 105.0078 50.0059 105.0078 49.7305 c
f
104.5078 72.7305 m
104.5078 72.4531 104.2832 72.2305 104.0078 72.2305 c
103.7305 72.2305 103.5078 72.4531 103.5078 72.7305 c
103.5078 73.0059 103.7305 73.2305 104.0078 73.2305 c
104.2832 73.2305 104.5078 73.0059 104.5078 72.7305 c
f
117.0078 102.0635 m
117.0078 101.7871 116.7832 101.5635 116.5078 101.5635 c
116.2305 101.5635 116.0078 101.7871 116.0078 102.0635 c
116.0078 102.3398 116.2305 102.5635 116.5078 102.5635 c
116.7832 102.5635 117.0078 102.3398 117.0078 102.0635 c
f
62.3408 56.7305 m
62.3408 56.4531 62.1172 56.2305 61.8408 56.2305 c
61.5645 56.2305 61.3408 56.4531 61.3408 56.7305 c
61.3408 57.0059 61.5645 57.2305 61.8408 57.2305 c
62.1172 57.2305 62.3408 57.0059 62.3408 56.7305 c
f
55.3408 121.73 m
55.3408 121.4536 55.1172 121.23 54.8408 121.23 c
54.5645 121.23 54.3408 121.4536 54.3408 121.73 c
54.3408 122.0063 54.5645 122.23 54.8408 122.23 c
55.1172 122.23 55.3408 122.0063 55.3408 121.73 c
f
44.8408 111.23 m
44.8408 110.9536 44.6172 110.73 44.3408 110.73 c
44.0645 110.73 43.8408 110.9536 43.8408 111.23 c
43.8408 111.5063 44.0645 111.73 44.3408 111.73 c
44.6172 111.73 44.8408 111.5063 44.8408 111.23 c
f
127.6738 109.73 m
127.6738 109.4536 127.4492 109.23 127.1738 109.23 c
126.8965 109.23 126.6738 109.4536 126.6738 109.73 c
126.6738 110.0063 126.8965 110.23 127.1738 110.23 c
127.4492 110.23 127.6738 110.0063 127.6738 109.73 c
f
101.0068 122.0635 m
101.0068 121.7871 100.7842 121.5635 100.5068 121.5635 c
100.2305 121.5635 100.0068 121.7871 100.0068 122.0635 c
100.0068 122.3398 100.2305 122.5635 100.5068 122.5635 c
100.7842 122.5635 101.0068 122.3398 101.0068 122.0635 c
f
106.0078 146.397 m
106.0078 146.1206 105.7832 145.897 105.5078 145.897 c
105.2305 145.897 105.0078 146.1206 105.0078 146.397 c
105.0078 146.6733 105.2305 146.897 105.5078 146.897 c
105.7832 146.897 106.0078 146.6733 106.0078 146.397 c
f
144.0078 159.397 m
144.0078 159.1206 143.7832 158.897 143.5078 158.897 c
143.2305 158.897 143.0078 159.1206 143.0078 159.397 c
143.0078 159.6733 143.2305 159.897 143.5078 159.897 c
143.7832 159.897 144.0078 159.6733 144.0078 159.397 c
f
123.3398 162.397 m
123.3398 162.1206 123.1172 161.897 122.8398 161.897 c
122.5645 161.897 122.3398 162.1206 122.3398 162.397 c
122.3398 162.6733 122.5645 162.897 122.8398 162.897 c
123.1172 162.897 123.3398 162.6733 123.3398 162.397 c
f
83.3408 162.397 m
83.3408 162.1206 83.1172 161.897 82.8408 161.897 c
82.5645 161.897 82.3408 162.1206 82.3408 162.397 c
82.3408 162.6733 82.5645 162.897 82.8408 162.897 c
83.1172 162.897 83.3408 162.6733 83.3408 162.397 c
f
145.2246 84.2813 m
145.2246 84.0049 145.002 83.7813 144.7246 83.7813 c
144.4492 83.7813 144.2246 84.0049 144.2246 84.2813 c
144.2246 84.5576 144.4492 84.7813 144.7246 84.7813 c
145.002 84.7813 145.2246 84.5576 145.2246 84.2813 c
f
90.3408 29.3965 m
90.3408 29.1191 90.1172 28.8965 89.8408 28.8965 c
89.5645 28.8965 89.3408 29.1191 89.3408 29.3965 c
89.3408 29.6719 89.5645 29.8965 89.8408 29.8965 c
90.1172 29.8965 90.3408 29.6719 90.3408 29.3965 c
f
138.6738 25.7305 m
138.6738 25.4531 138.4492 25.2305 138.1738 25.2305 c
137.8965 25.2305 137.6738 25.4531 137.6738 25.7305 c
137.6738 26.0059 137.8965 26.2305 138.1738 26.2305 c
138.4492 26.2305 138.6738 26.0059 138.6738 25.7305 c
f
150.0078 75.3965 m
150.0078 75.1211 149.7832 74.8965 149.5078 74.8965 c
149.2305 74.8965 149.0078 75.1211 149.0078 75.3965 c
149.0078 75.6738 149.2305 75.8965 149.5078 75.8965 c
149.7832 75.8965 150.0078 75.6738 150.0078 75.3965 c
f
148.6738 100.397 m
148.6738 100.1211 148.4492 99.8965 148.1738 99.8965 c
147.8965 99.8965 147.6738 100.1211 147.6738 100.397 c
147.6738 100.6733 147.8965 100.897 148.1738 100.897 c
148.4492 100.897 148.6738 100.6733 148.6738 100.397 c
f
104.6738 99.8965 m
104.6738 99.6211 104.4492 99.3965 104.1738 99.3965 c
103.8965 99.3965 103.6738 99.6211 103.6738 99.8965 c
103.6738 100.1738 103.8965 100.397 104.1738 100.397 c
104.4492 100.397 104.6738 100.1738 104.6738 99.8965 c
f
110.0078 109.73 m
110.0078 109.4536 109.7832 109.23 109.5078 109.23 c
109.2305 109.23 109.0078 109.4536 109.0078 109.73 c
109.0078 110.0063 109.2305 110.23 109.5078 110.23 c
109.7832 110.23 110.0078 110.0063 110.0078 109.73 c
f
81.0068 118.96 m
81.0068 118.6836 80.7832 118.46 80.5068 118.46 c
80.2305 118.46 80.0068 118.6836 80.0068 118.96 c
80.0068 119.2363 80.2305 119.46 80.5068 119.46 c
80.7832 119.46 81.0068 119.2363 81.0068 118.96 c
f
52.0068 117.0635 m
52.0068 116.7871 51.7832 116.5635 51.5068 116.5635 c
51.2305 116.5635 51.0068 116.7871 51.0068 117.0635 c
51.0068 117.3398 51.2305 117.5635 51.5068 117.5635 c
51.7832 117.5635 52.0068 117.3398 52.0068 117.0635 c
f
64.5068 104.5635 m
64.5068 104.2871 64.2832 104.0635 64.0068 104.0635 c
63.7305 104.0635 63.5068 104.2871 63.5068 104.5635 c
63.5068 104.8398 63.7305 105.0635 64.0068 105.0635 c
64.2832 105.0635 64.5068 104.8398 64.5068 104.5635 c
f
55.6738 101.73 m
55.6738 101.4536 55.4502 101.23 55.1738 101.23 c
54.8975 101.23 54.6738 101.4536 54.6738 101.73 c
54.6738 102.0063 54.8975 102.23 55.1738 102.23 c
55.4502 102.23 55.6738 102.0063 55.6738 101.73 c
f
28.3408 52.7305 m
28.3408 52.4531 28.1172 52.2305 27.8408 52.2305 c
27.5645 52.2305 27.3408 52.4531 27.3408 52.7305 c
27.3408 53.0059 27.5645 53.2305 27.8408 53.2305 c
28.1172 53.2305 28.3408 53.0059 28.3408 52.7305 c
f
69.8779 63.6074 m
69.8779 63.3301 69.6543 63.1074 69.3779 63.1074 c
69.1016 63.1074 68.8779 63.3301 68.8779 63.6074 c
68.8779 63.8828 69.1016 64.1074 69.3779 64.1074 c
69.6543 64.1074 69.8779 63.8828 69.8779 63.6074 c
f
25.8408 154.897 m
25.8408 154.6206 25.6172 154.397 25.3408 154.397 c
25.0645 154.397 24.8408 154.6206 24.8408 154.897 c
24.8408 155.1733 25.0645 155.397 25.3408 155.397 c
25.6172 155.397 25.8408 155.1733 25.8408 154.897 c
f
111.6738 81.7305 m
111.6738 81.4531 111.4492 81.2305 111.1738 81.2305 c
110.8965 81.2305 110.6738 81.4531 110.6738 81.7305 c
110.6738 82.0059 110.8965 82.2305 111.1738 82.2305 c
111.4492 82.2305 111.6738 82.0059 111.6738 81.7305 c
f
35.6738 110.397 m
35.6738 110.1206 35.4502 109.897 35.1738 109.897 c
34.8975 109.897 34.6738 110.1206 34.6738 110.397 c
34.6738 110.6733 34.8975 110.897 35.1738 110.897 c
35.4502 110.897 35.6738 110.6733 35.6738 110.397 c
f
151.4922 152.2456 m
151.4922 151.9692 151.2676 151.7456 150.9922 151.7456 c
150.7148 151.7456 150.4922 151.9692 150.4922 152.2456 c
150.4922 152.522 150.7148 152.7456 150.9922 152.7456 c
151.2676 152.7456 151.4922 152.522 151.4922 152.2456 c
f
119.5898 53.6465 m
119.5898 53.3711 119.3672 53.1465 119.0898 53.1465 c
118.8145 53.1465 118.5898 53.3711 118.5898 53.6465 c
118.5898 53.9238 118.8145 54.1465 119.0898 54.1465 c
119.3672 54.1465 119.5898 53.9238 119.5898 53.6465 c
f
118.2207 151.0635 m
118.2207 150.7871 117.998 150.5635 117.7207 150.5635 c
117.4453 150.5635 117.2207 150.7871 117.2207 151.0635 c
117.2207 151.3398 117.4453 151.5635 117.7207 151.5635 c
117.998 151.5635 118.2207 151.3398 118.2207 151.0635 c
f
22.3408 128.3965 m
22.3408 128.1201 22.1172 127.8965 21.8408 127.8965 c
21.5645 127.8965 21.3408 128.1201 21.3408 128.3965 c
21.3408 128.6729 21.5645 128.8965 21.8408 128.8965 c
22.1172 128.8965 22.3408 128.6729 22.3408 128.3965 c
f
79.6738 90.0635 m
79.6738 89.7871 79.4502 89.5635 79.1738 89.5635 c
78.8975 89.5635 78.6738 89.7871 78.6738 90.0635 c
78.6738 90.3398 78.8975 90.5635 79.1738 90.5635 c
79.4502 90.5635 79.6738 90.3398 79.6738 90.0635 c
f
14.5078 45.8965 m
14.5078 45.6211 14.2842 45.3965 14.0078 45.3965 c
13.7314 45.3965 13.5078 45.6211 13.5078 45.8965 c
13.5078 46.1738 13.7314 46.3965 14.0078 46.3965 c
14.2842 46.3965 14.5078 46.1738 14.5078 45.8965 c
f
64.3408 41.3965 m
64.3408 41.1211 64.1172 40.8965 63.8408 40.8965 c
63.5645 40.8965 63.3408 41.1211 63.3408 41.3965 c
63.3408 41.6738 63.5645 41.8965 63.8408 41.8965 c
64.1172 41.8965 64.3408 41.6738 64.3408 41.3965 c
f
76.3408 29.3965 m
76.3408 29.1211 76.1172 28.8965 75.8408 28.8965 c
75.5645 28.8965 75.3408 29.1211 75.3408 29.3965 c
75.3408 29.6738 75.5645 29.8965 75.8408 29.8965 c
76.1172 29.8965 76.3408 29.6738 76.3408 29.3965 c
f
100.6729 86.7305 m
100.6729 86.4531 100.4492 86.2305 100.1729 86.2305 c
99.8975 86.2305 99.6729 86.4531 99.6729 86.7305 c
99.6729 87.0059 99.8975 87.2305 100.1729 87.2305 c
100.4492 87.2305 100.6729 87.0059 100.6729 86.7305 c
f
63.5068 63.3965 m
63.5068 63.1211 63.2832 62.8965 63.0068 62.8965 c
62.7305 62.8965 62.5068 63.1211 62.5068 63.3965 c
62.5068 63.6738 62.7305 63.8965 63.0068 63.8965 c
63.2832 63.8965 63.5068 63.6738 63.5068 63.3965 c
f
30.1738 81.2305 m
30.1738 80.9541 29.9502 80.7305 29.6738 80.7305 c
29.3975 80.7305 29.1738 80.9541 29.1738 81.2305 c
29.1738 81.5068 29.3975 81.7305 29.6738 81.7305 c
29.9502 81.7305 30.1738 81.5068 30.1738 81.2305 c
f
76.2373 140.501 m
76.2373 140.2246 76.0137 140.001 75.7373 140.001 c
75.4609 140.001 75.2373 140.2246 75.2373 140.501 c
75.2373 140.7773 75.4609 141.001 75.7373 141.001 c
76.0137 141.001 76.2373 140.7773 76.2373 140.501 c
f
72.4492 157.1724 m
72.4492 156.896 72.2256 156.6724 71.9492 156.6724 c
71.6729 156.6724 71.4492 156.896 71.4492 157.1724 c
71.4492 157.4487 71.6729 157.6724 71.9492 157.6724 c
72.2256 157.6724 72.4492 157.4487 72.4492 157.1724 c
f
150.0078 64.3965 m
150.0078 64.1211 149.7832 63.8965 149.5078 63.8965 c
149.2305 63.8965 149.0078 64.1211 149.0078 64.3965 c
149.0078 64.6738 149.2305 64.8965 149.5078 64.8965 c
149.7832 64.8965 150.0078 64.6738 150.0078 64.3965 c
f
136.3398 55.3965 m
136.3398 55.1211 136.1172 54.8965 135.8398 54.8965 c
135.5645 54.8965 135.3398 55.1211 135.3398 55.3965 c
135.3398 55.6738 135.5645 55.8965 135.8398 55.8965 c
136.1172 55.8965 136.3398 55.6738 136.3398 55.3965 c
f
134.0078 33.7305 m
134.0078 33.4531 133.7832 33.2305 133.5078 33.2305 c
133.2305 33.2305 133.0078 33.4531 133.0078 33.7305 c
133.0078 34.0059 133.2305 34.2305 133.5078 34.2305 c
133.7832 34.2305 134.0078 34.0059 134.0078 33.7305 c
f
151.3398 28.7305 m
151.3398 28.4531 151.1172 28.2305 150.8398 28.2305 c
150.5645 28.2305 150.3398 28.4531 150.3398 28.7305 c
150.3398 29.0059 150.5645 29.2305 150.8398 29.2305 c
151.1172 29.2305 151.3398 29.0059 151.3398 28.7305 c
f
135.6738 139.4287 m
135.6738 139.1523 135.4492 138.9287 135.1738 138.9287 c
134.8965 138.9287 134.6738 139.1523 134.6738 139.4287 c
134.6738 139.7051 134.8965 139.9287 135.1738 139.9287 c
135.4492 139.9287 135.6738 139.7051 135.6738 139.4287 c
f
85.6738 128.397 m
85.6738 128.1206 85.4502 127.897 85.1738 127.897 c
84.8975 127.897 84.6738 128.1206 84.6738 128.397 c
84.6738 128.6733 84.8975 128.897 85.1738 128.897 c
85.4502 128.897 85.6738 128.6733 85.6738 128.397 c
f
18.3408 91.0635 m
18.3408 90.7871 18.1172 90.5635 17.8408 90.5635 c
17.5645 90.5635 17.3408 90.7871 17.3408 91.0635 c
17.3408 91.3398 17.5645 91.5635 17.8408 91.5635 c
18.1172 91.5635 18.3408 91.3398 18.3408 91.0635 c
f
88.0078 63.0625 m
88.0078 62.7871 87.7842 62.5625 87.5078 62.5625 c
87.2314 62.5625 87.0078 62.7871 87.0078 63.0625 c
87.0078 63.3398 87.2314 63.5625 87.5078 63.5625 c
87.7842 63.5625 88.0078 63.3398 88.0078 63.0625 c
f
56.6738 78.3965 m
56.6738 78.1211 56.4502 77.8965 56.1738 77.8965 c
55.8975 77.8965 55.6738 78.1211 55.6738 78.3965 c
55.6738 78.6738 55.8975 78.8965 56.1738 78.8965 c
56.4502 78.8965 56.6738 78.6738 56.6738 78.3965 c
f
51.0068 127.73 m
51.0068 127.4536 50.7832 127.23 50.5068 127.23 c
50.2305 127.23 50.0068 127.4536 50.0068 127.73 c
50.0068 128.0063 50.2305 128.23 50.5068 128.23 c
50.7832 128.23 51.0068 128.0063 51.0068 127.73 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Passermarken]) 0 Xs
([Passermarken])
Pc
(Gitter auf Gitter) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Gitter auf Gitter)
Pc
(Sternenhimmel) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Sternenhimmel)
Pc
1 1 1 1 ([Registration]) 0 x
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Ebene 1) Ln
0 A
u
0 O
0.945313 0.824219 0.8125 0.894531 k
0 J 0 j 1 w 4 M []0 d0 XR
148.6646 284.3887 m
148.6646 169.1602 L
112.0156 169.1602 L
112.0156 273.5898 L
112.0352 274.373 l
112.5981 274.3525 113.1729 274.3291 113.7363 274.3291 c
127.3457 274.3291 139.2622 278.1543 148.6455 284.8789 c
148.6646 284.3887 L
f
67.918 285.166 m
160.6904 285.166 L
160.6904 377.9292 L
67.918 377.9292 l
67.918 285.166 L
n
0 O
0 0.980392 0.8 0.003922 k
0 R
0.003922 0.984314 0.701961 0.003922 K
114.3022 377.9292 m
139.9194 377.9292 160.6904 357.1685 160.6904 331.5552 c
160.6904 305.9355 139.9194 285.166 114.3022 285.166 c
88.6885 285.166 67.918 305.9355 67.918 331.5552 c
67.918 357.1685 88.6885 377.9292 114.3022 377.9292 C
B
0.945313 0.824219 0.8125 0.894531 k
198.6895 302.5522 m
198.6895 349.2207 L
171.6177 337.7505 l
171.7017 336.4238 171.6826 335.0874 171.7407 333.7412 c
172.6904 312.814 164.3838 295.3198 149.9385 284.7656 C
150.644 284.7686 L
166.707 284.7686 L
166.707 207.9092 l
166.707 194.3232 168.0049 185.4121 170.6021 181.1855 c
173.1904 176.9463 177.6582 173.5293 184.022 170.9248 c
190.3877 168.334 199.3252 167.0303 210.8755 167.0303 c
217.9453 167.0303 225.9536 167.7061 234.9063 169.0439 C
230.6753 189.042 l
224.8955 188.457 220.2534 188.1631 216.7231 188.1631 c
211.9941 188.1631 208.3745 188.709 205.8521 189.7959 c
203.3228 190.8896 201.4834 192.3525 200.3696 194.2031 c
199.2456 196.0449 198.6895 200.2002 198.6895 206.6572 C
198.6895 284.7686 L
229.2876 284.7686 L
229.2246 302.54 l
198.6895 302.5522 L
f
u
*u
294.6167 274.543 m
292.2524 278.4209 289.2334 281.3301 285.5601 283.2705 c
281.8857 285.209 277.5317 286.1797 272.498 286.1797 c
265.8174 286.1797 260.23 284.0713 255.7334 279.8516 c
251.2368 275.6318 248.9912 270.334 248.9912 263.96 c
248.9912 257.6748 251.2905 252.4453 255.8906 248.2705 c
260.4902 244.0967 266.2617 242.0098 273.2031 242.0098 c
278.5483 242.0098 282.9956 243.0117 286.541 245.0186 c
290.0874 247.0225 292.7363 250.0313 294.4849 254.0439 c
315.5117 254.0439 L
312.9414 244.9316 307.9307 237.7832 300.4785 232.5967 c
293.0254 227.4092 283.979 224.8164 273.3408 224.8164 c
267.0693 224.8164 261.2607 225.7969 255.915 227.7529 c
250.5693 229.71 245.7378 232.6016 241.4214 236.4268 c
237.4126 240.0254 234.2759 244.2432 232.0151 249.0801 c
229.7549 253.915 228.624 258.8311 228.624 263.8262 c
228.624 269.0459 229.6514 273.9268 231.7075 278.4707 c
233.7612 283.0146 236.793 287.1104 240.8013 290.7559 c
245.2197 294.8486 250.2036 297.9526 255.7544 300.0688 c
261.3047 302.1821 267.2637 303.2402 273.6367 303.2402 c
284.0161 303.2402 293.0093 300.645 300.6133 295.4561 c
308.2173 290.2656 313.2285 283.2959 315.644 274.543 c
294.6167 274.543 L
f
*U
*u
324.0811 264.2314 m
324.0811 269.4512 325.1719 274.4102 327.356 279.1133 c
329.54 283.8145 332.7134 287.9863 336.875 291.6309 c
341.1396 295.3652 345.9448 298.2339 351.2881 300.2358 c
356.6323 302.2383 362.1826 303.2402 367.937 303.2402 c
374.0522 303.2402 379.6904 302.3521 384.8574 300.5752 c
390.0215 298.7979 394.7607 296.1323 399.0776 292.5781 c
403.4966 288.8418 406.9141 284.5342 409.3291 279.6523 c
411.7427 274.7695 412.9521 269.7646 412.9521 264.6357 c
412.9521 258.9658 411.8979 253.792 409.7905 249.1133 c
407.6821 244.4336 404.5229 240.2031 400.312 236.4268 c
396.0962 232.6016 391.2915 229.71 385.8965 227.7529 c
380.5015 225.7969 374.6426 224.8164 368.3242 224.8164 c
361.9507 224.8164 356.1421 225.8066 350.9019 227.7871 c
345.6621 229.7656 340.8828 232.7354 336.5669 236.6953 c
332.4561 240.5625 329.3472 244.8252 327.2397 249.4844 c
325.1328 254.1416 324.0811 259.0566 324.0811 264.2314 c
f
1 D
344.4463 264.3633 m
344.4463 257.4941 346.604 252.0518 350.9185 248.0352 c
355.2329 244.0186 361.0918 242.0098 368.4893 242.0098 c
375.7837 242.0098 381.5996 244.0615 385.9419 248.1689 c
390.2813 252.2773 392.4531 257.8086 392.4531 264.7686 c
392.4531 271.0068 390.1802 276.1357 385.6343 280.1523 c
381.0879 284.1699 375.3726 286.1797 368.4893 286.1797 c
361.3994 286.1797 355.6196 284.1494 351.1504 280.0869 c
346.6797 276.0234 344.4463 270.7813 344.4463 264.3633 c
f
*U
*u
0 D
486.5195 274.543 m
484.1553 278.4209 481.1367 281.3301 477.4629 283.2705 c
473.7881 285.209 469.4346 286.1797 464.4004 286.1797 c
457.7197 286.1797 452.1318 284.0713 447.6367 279.8516 c
443.1387 275.6318 440.8936 270.334 440.8936 263.96 c
440.8936 257.6748 443.1934 252.4453 447.793 248.2705 c
452.3936 244.0967 458.1641 242.0098 465.1055 242.0098 c
470.4512 242.0098 474.8975 243.0117 478.4434 245.0186 c
481.9902 247.0225 484.6396 250.0313 486.3877 254.0439 c
507.415 254.0439 L
504.8438 244.9316 499.833 237.7832 492.3818 232.5967 c
484.9287 227.4092 475.8809 224.8164 465.2441 224.8164 c
458.9727 224.8164 453.1641 225.7969 447.8184 227.7529 c
442.4717 229.71 437.6406 232.6016 433.3242 236.4268 c
429.3145 240.0254 426.1787 244.2432 423.917 249.0801 c
421.6572 253.915 420.5273 258.8311 420.5273 263.8262 c
420.5273 269.0459 421.5537 273.9268 423.6094 278.4707 c
425.6641 283.0146 428.6953 287.1104 432.7051 290.7559 c
437.1221 294.8486 442.1064 297.9526 447.6563 300.0688 c
453.207 302.1821 459.167 303.2402 465.5391 303.2402 c
475.9189 303.2402 484.9121 300.645 492.5166 295.4561 c
500.1211 290.2656 505.1309 283.2959 507.5479 274.543 c
486.5195 274.543 L
f
*U
*u
540.1836 226.8008 m
521.1396 226.8008 L
521.1396 325.062 L
540.1836 325.062 L
540.1836 266.5947 L
567.7363 300.9922 L
590.041 300.9922 L
560.6357 265.7852 L
595.8604 226.8008 L
571.0723 226.8008 L
540.1836 264.5039 l
540.1836 226.8008 L
f
*U
*u
617.4688 232.7354 m
617.4688 202.7314 L
598.0283 202.7314 L
598.0283 300.9922 L
617.4688 300.9922 L
617.4688 294.7471 L
621.4268 297.4917 625.5625 299.5269 629.8809 300.8535 c
634.2002 302.1802 638.8525 302.8438 643.8428 302.8438 c
649.1855 302.8438 654.2236 302.1123 658.9561 300.6514 c
663.6836 299.1904 667.9238 297.0205 671.6768 294.1436 c
676.7637 290.2764 680.6855 285.7139 683.4336 280.4521 c
686.1865 275.1914 687.5625 269.5957 687.5625 263.6611 c
687.5625 258.1309 686.3154 252.8477 683.8223 247.8145 c
681.3262 242.7773 677.793 238.4375 673.2178 234.7969 c
669.3135 231.5596 664.8525 229.0859 659.8398 227.3789 c
654.8271 225.6719 649.5449 224.8164 643.9951 224.8164 c
638.5947 224.8164 633.75 225.4609 629.458 226.7451 c
625.166 228.0303 621.1689 230.0293 617.4688 232.7354 c
f
1 D
618.2393 264.2002 m
618.2393 257.8789 620.5762 252.5986 625.2549 248.3623 c
629.9316 244.127 635.7119 242.0098 642.6016 242.0098 c
649.3838 242.0098 655.1787 244.1611 659.9844 248.4648 c
664.791 252.7666 667.1973 257.9219 667.1973 263.9307 c
667.1973 270.1621 664.7783 275.3398 659.9482 279.4648 c
655.1172 283.5889 649.0244 285.6514 641.6758 285.6514 c
635.2002 285.6514 629.6758 283.5762 625.0996 279.4316 c
620.5244 275.2842 618.2393 270.208 618.2393 264.2002 c
f
*U
*u
0 D
720.5273 308.5308 m
701.2188 308.5308 L
701.2188 324.9292 L
720.5273 324.9292 l
720.5273 308.5308 L
f
701.2188 226.8008 m
701.2188 300.9922 L
720.5273 300.9922 L
720.5273 226.8008 l
701.2188 226.8008 L
f
*U
*u
744.25 226.8008 m
744.25 285.6514 L
731.29 285.6514 L
731.29 300.9922 L
744.25 300.9922 L
744.25 325.062 L
763.9551 325.062 L
763.9551 300.9922 L
777.0479 300.9922 L
777.0479 285.6514 L
763.9551 285.6514 L
763.9551 226.8008 l
744.25 226.8008 L
f
*U
U
u
*u
0 0.980392 0.8 0.003922 k
0 R
0.003922 0.984314 0.701961 0.003922 K
247.9902 172.1025 m
249.4639 171.3018 252.0669 170.4609 254.5576 170.4609 c
258.1821 170.4609 259.8818 171.959 259.8818 173.8389 c
259.8818 175.8105 258.4648 176.8877 254.7852 178.0195 c
249.8604 179.4736 247.5381 181.7266 247.5381 184.4463 c
247.5381 188.1094 251.1045 191.1162 256.9941 191.1162 c
259.7676 191.1162 262.2031 190.459 263.73 189.7051 c
262.4863 186.6982 L
261.4111 187.2646 259.4292 188.0127 256.8804 188.0127 c
253.9365 188.0127 252.2939 186.6074 252.2939 184.9189 c
252.2939 183.04 253.9365 182.1943 257.5034 181.0674 c
262.2593 179.5645 264.6943 177.5938 264.6943 174.2148 c
264.6943 170.2227 260.9565 167.3584 254.4473 167.3584 c
251.4458 167.3584 248.6714 168.0156 246.7456 168.959 C
247.9902 172.1025 l
b
*U
*u
272.9028 190.5977 m
278.9053 177.1719 L
279.5288 175.6699 280.2075 173.8867 280.6611 172.5254 c
280.7725 172.5254 L
281.2822 173.8867 281.8506 175.6221 282.5293 177.2656 c
287.9644 190.5977 L
293.231 190.5977 L
285.7549 174.4033 L
282.1885 166.6094 279.7549 162.623 276.3584 160.1768 c
273.9229 158.3994 271.4897 157.6924 270.2427 157.5039 c
268.998 160.9775 L
270.2427 161.3066 271.8853 161.9658 273.3569 162.999 c
274.7148 163.8877 276.4136 165.4834 277.5474 167.5938 c
277.7744 168.0156 277.9429 168.3447 277.9429 168.5801 c
277.9429 168.8174 277.8291 169.1465 277.603 169.6582 c
267.4688 190.5977 L
272.9028 190.5977 l
b
*U
*u
297.0786 172.1025 m
298.5522 171.3018 301.1548 170.4609 303.646 170.4609 c
307.2705 170.4609 308.9692 171.959 308.9692 173.8389 c
308.9692 175.8105 307.5537 176.8877 303.873 178.0195 c
298.9492 179.4736 296.626 181.7266 296.626 184.4463 c
296.626 188.1094 300.1929 191.1162 306.0811 191.1162 c
308.855 191.1162 311.2915 190.459 312.8188 189.7051 c
311.5732 186.6982 L
310.499 187.2646 308.5171 188.0127 305.9683 188.0127 c
303.0249 188.0127 301.3823 186.6074 301.3823 184.9189 c
301.3823 183.04 303.0249 182.1943 306.5913 181.0674 c
311.3467 179.5645 313.7827 177.5938 313.7827 174.2148 c
313.7827 170.2227 310.0439 167.3584 303.5342 167.3584 c
300.5337 167.3584 297.7598 168.0156 295.8335 168.959 C
297.0786 172.1025 l
b
*U
*u
326.1807 196.0449 m
326.1807 190.5977 L
333.3159 190.5977 L
333.3159 187.4531 L
326.1807 187.4531 L
326.1807 175.2012 L
326.1807 172.3838 327.1455 170.7881 329.9185 170.7881 c
331.2769 170.7881 332.0688 170.8789 332.8066 171.0693 c
333.0337 167.9727 L
332.0688 167.6436 330.5415 167.3584 328.6157 167.3584 c
326.2939 167.3584 324.4263 168.0156 323.2373 169.1465 c
321.8223 170.3633 321.3115 172.3838 321.3115 175.0596 c
321.3115 187.4531 L
317.0659 187.4531 L
317.0659 190.5977 L
321.3115 190.5977 L
321.3115 194.7773 L
326.1807 196.0449 l
b
*U
*u
341.6958 178.4893 m
341.8096 172.9004 346.1099 170.6006 351.0938 170.6006 c
354.6616 170.6006 356.8115 171.1172 358.6807 171.7744 c
359.5317 168.8174 L
357.7739 168.1602 354.7764 167.3584 350.4141 167.3584 c
341.9785 167.3584 336.938 172.0059 336.938 178.8613 c
336.938 185.7129 341.8096 191.1162 349.7925 191.1162 c
358.7373 191.1162 361.1157 184.5898 361.1157 180.4092 c
361.1157 179.5645 361.0024 178.9072 360.9468 178.4893 C
341.6958 178.4893 l
b
1 D
356.3022 181.4453 m
356.3604 184.0693 354.9995 188.1563 349.395 188.1563 c
344.3555 188.1563 342.1475 184.3115 341.7515 181.4453 C
356.3022 181.4453 l
b
*U
*u
0 D
367.29 184.4463 m
367.29 186.7959 367.2319 188.7188 367.062 190.5977 c
371.4214 190.5977 L
371.6484 186.9355 L
371.8188 186.9355 L
373.3472 189.0947 375.8945 191.1162 380.4243 191.1162 c
384.1611 191.1162 386.9922 189.2363 388.1802 186.5635 c
388.2949 186.5635 L
389.1426 187.8281 390.2207 188.8135 391.3521 189.5205 c
392.9941 190.5498 394.8062 191.1162 397.4092 191.1162 c
401.0332 191.1162 406.4121 189.1426 406.4121 181.2568 c
406.4121 167.8789 L
401.543 167.8789 L
401.543 180.7383 L
401.543 185.1035 399.6172 187.7314 395.5996 187.7314 c
392.7671 187.7314 390.5586 185.9971 389.7114 183.9834 c
389.4844 183.4121 389.314 182.668 389.314 181.9141 c
389.314 167.8789 L
384.4438 167.8789 L
384.4438 181.4893 L
384.4438 185.1035 382.5205 187.7314 378.7256 187.7314 c
375.6123 187.7314 373.3472 185.6699 372.5552 183.6055 c
372.2715 182.9971 372.1592 182.291 372.1592 181.5859 c
372.1592 167.8789 L
367.29 167.8789 L
367.29 184.4463 l
b
*U
*u
414.5098 184.4463 m
414.5098 186.7959 414.4517 188.7188 414.2827 190.5977 c
418.6411 190.5977 L
418.8691 186.9355 L
419.0381 186.9355 L
420.5679 189.0947 423.1143 191.1162 427.6455 191.1162 c
431.3809 191.1162 434.2129 189.2363 435.4033 186.5635 c
435.5146 186.5635 L
436.3604 187.8281 437.4424 188.8135 438.5742 189.5205 c
440.2168 190.5498 442.0244 191.1162 444.6299 191.1162 c
448.2539 191.1162 453.6328 189.1426 453.6328 181.2568 c
453.6328 167.8789 L
448.7607 167.8789 L
448.7607 180.7383 L
448.7607 185.1035 446.8379 187.7314 442.8174 187.7314 c
439.9854 187.7314 437.7822 185.9971 436.9307 183.9834 c
436.7041 183.4121 436.5352 182.668 436.5352 181.9141 c
436.5352 167.8789 L
431.6631 167.8789 L
431.6631 181.4893 L
431.6631 185.1035 429.7402 187.7314 425.9463 187.7314 c
422.832 187.7314 420.5679 185.6699 419.7749 183.6055 c
419.4922 182.9971 419.3789 182.291 419.3789 181.5859 c
419.3789 167.8789 L
414.5098 167.8789 L
414.5098 184.4463 l
b
*U
*u
480.9746 173.3213 m
480.9746 171.3486 481.0938 169.4277 481.4297 167.8789 c
476.9023 167.8789 L
476.5059 170.7422 L
476.3369 170.7422 L
474.8096 168.959 471.8623 167.3584 467.9561 167.3584 c
462.4092 167.3584 459.5762 170.6006 459.5762 173.8867 c
459.5762 179.3809 465.4629 182.3828 476.0566 182.3398 c
476.0566 182.8027 L
476.0566 184.6836 475.4287 188.0615 469.8213 188.0615 c
467.2803 188.0615 464.6182 187.4023 462.6885 186.3691 c
461.5586 189.0947 L
463.8242 190.3115 467.1055 191.1162 470.5615 191.1162 c
478.9395 191.1162 480.9746 186.3691 480.9746 181.8164 C
480.9746 173.3213 l
b
1 D
476.166 179.4736 m
470.7295 179.5645 464.5586 178.7676 464.5586 174.3545 c
464.5586 171.6777 466.7109 170.4131 469.2607 170.4131 c
472.8281 170.4131 475.0889 172.2871 475.8809 174.2148 c
476.0566 174.6357 476.166 175.1104 476.166 175.5293 C
476.166 179.4736 l
b
*U
*u
0 D
489.0215 184.4463 m
489.0215 186.7959 488.9639 188.7188 488.7949 190.5977 c
493.2129 190.5977 L
493.4912 186.8428 L
493.6074 186.8428 L
494.9668 188.998 498.1367 191.1162 502.666 191.1162 c
506.4639 191.1162 512.3496 189.2363 512.3496 181.4453 c
512.3496 167.8789 L
507.3672 167.8789 L
507.3672 180.9756 L
507.3672 184.6406 505.7236 187.6836 501.0215 187.6836 c
497.7402 187.6836 495.1934 185.7607 494.3428 183.46 c
494.1152 182.9482 494.0029 182.2432 494.0029 181.5352 c
494.0029 167.8789 L
489.0215 167.8789 L
489.0215 184.4463 l
b
*U
*u
539.6914 173.3213 m
539.6914 171.3486 539.8076 169.4277 540.1455 167.8789 c
535.6123 167.8789 L
535.2178 170.7422 L
535.0547 170.7422 L
533.5215 168.959 530.5791 167.3584 526.6738 167.3584 c
521.126 167.3584 518.292 170.6006 518.292 173.8867 c
518.292 179.3809 524.1787 182.3828 534.7695 182.3398 c
534.7695 182.8027 L
534.7695 184.6836 534.1455 188.0615 528.5371 188.0615 c
525.9912 188.0615 523.3301 187.4023 521.4063 186.3691 c
520.2754 189.0947 L
522.5371 190.3115 525.8223 191.1162 529.2725 191.1162 c
537.6543 191.1162 539.6914 186.3691 539.6914 181.8164 C
539.6914 173.3213 l
b
1 D
534.8789 179.4736 m
529.4463 179.5645 523.2725 178.7676 523.2725 174.3545 c
523.2725 171.6777 525.4248 170.4131 527.9736 170.4131 c
531.54 170.4131 533.8066 172.2871 534.6006 174.2148 c
534.7695 174.6357 534.8789 175.1104 534.8789 175.5293 C
534.8789 179.4736 l
b
*U
*u
0 D
571.1201 171.166 m
571.1201 165.9512 569.874 162.7568 567.21 160.7891 c
564.5508 158.7275 560.7002 158.0703 557.2441 158.0703 c
553.9629 158.0703 550.3379 158.7275 548.1309 159.9443 c
549.377 163.0859 L
551.1895 162.1475 554.0205 161.3066 557.4189 161.3066 c
562.5127 161.3066 566.2529 163.5107 566.2529 169.2373 c
566.2529 171.7744 L
566.1367 171.7744 L
564.6104 169.6582 561.6611 167.9727 557.4189 167.9727 c
550.623 167.9727 545.7529 172.7607 545.7529 179.0527 c
545.7529 186.7451 551.8135 191.1162 558.0947 191.1162 c
562.8516 191.1162 565.46 189.0479 566.6504 187.1719 c
566.7617 187.1719 L
566.9883 190.5977 L
571.3467 190.5977 L
571.2305 188.9551 571.1201 187.124 571.1201 184.3545 C
571.1201 171.166 l
b
1 D
566.1953 181.6328 m
566.1953 182.3398 566.1367 182.9482 565.9102 183.5078 c
565.0049 185.9043 562.5703 187.8779 558.9463 187.8779 c
554.1895 187.8779 550.792 184.543 550.792 179.2832 c
550.792 174.8242 553.5137 171.1172 558.8887 171.1172 c
561.9463 171.1172 564.7197 172.7129 565.7988 175.3408 c
566.0791 176.0469 566.1953 176.8428 566.1953 177.5459 C
566.1953 181.6328 l
b
*U
*u
0 D
582.1621 178.4893 m
582.2715 172.9004 586.5742 170.6006 591.5586 170.6006 c
595.125 170.6006 597.2773 171.1172 599.1436 171.7744 c
599.9932 168.8174 L
598.2373 168.1602 595.2412 167.3584 590.8799 167.3584 c
582.4404 167.3584 577.4043 172.0059 577.4043 178.8613 c
577.4043 185.7129 582.2715 191.1162 590.2568 191.1162 c
599.2021 191.1162 601.5801 184.5898 601.5801 180.4092 c
601.5801 179.5645 601.4648 178.9072 601.4102 178.4893 C
582.1621 178.4893 l
b
1 D
596.7656 181.4453 m
596.8232 184.0693 595.4619 188.1563 589.8555 188.1563 c
584.8193 188.1563 582.6113 184.3115 582.2139 181.4453 C
596.7656 181.4453 l
b
*U
*u
0 D
607.751 184.4463 m
607.751 186.7959 607.6934 188.7188 607.5225 190.5977 c
611.8838 190.5977 L
612.1104 186.9355 L
612.2793 186.9355 L
613.8047 189.0947 616.3594 191.1162 620.8867 191.1162 c
624.6211 191.1162 627.4531 189.2363 628.6416 186.5635 c
628.7568 186.5635 L
629.6045 187.8281 630.6826 188.8135 631.8115 189.5205 c
633.4561 190.5498 635.2686 191.1162 637.874 191.1162 c
641.498 191.1162 646.8721 189.1426 646.8721 181.2568 c
646.8721 167.8789 L
642.0049 167.8789 L
642.0049 180.7383 L
642.0049 185.1035 640.0771 187.7314 636.0605 187.7314 c
633.2295 187.7314 631.0195 185.9971 630.1709 183.9834 c
629.9473 183.4121 629.7734 182.668 629.7734 181.9141 c
629.7734 167.8789 L
624.9023 167.8789 L
624.9023 181.4893 L
624.9023 185.1035 622.9805 187.7314 619.1904 187.7314 c
616.0742 187.7314 613.8047 185.6699 613.0137 183.6055 c
612.7354 182.9971 612.6191 182.291 612.6191 181.5859 c
612.6191 167.8789 L
607.751 167.8789 L
607.751 184.4463 l
b
*U
*u
657.7451 178.4893 m
657.8613 172.9004 662.1621 170.6006 667.1455 170.6006 c
670.7158 170.6006 672.8613 171.1172 674.7324 171.7744 c
675.582 168.8174 L
673.8281 168.1602 670.8281 167.3584 666.4629 167.3584 c
658.0303 167.3584 652.9893 172.0059 652.9893 178.8613 c
652.9893 185.7129 657.8613 191.1162 665.8447 191.1162 c
674.79 191.1162 677.167 184.5898 677.167 180.4092 c
677.167 179.5645 677.0576 178.9072 676.999 178.4893 C
657.7451 178.4893 l
b
1 D
672.3535 181.4453 m
672.4111 184.0693 671.0547 188.1563 665.4473 188.1563 c
660.4082 188.1563 658.1992 184.3115 657.8027 181.4453 C
672.3535 181.4453 l
b
*U
*u
0 D
683.3389 184.4463 m
683.3389 186.7959 683.2813 188.7188 683.1123 190.5977 c
687.5293 190.5977 L
687.8145 186.8428 L
687.9248 186.8428 L
689.2842 188.998 692.4541 191.1162 696.9854 191.1162 c
700.7754 191.1162 706.667 189.2363 706.667 181.4453 c
706.667 167.8789 L
701.6846 167.8789 L
701.6846 180.9756 L
701.6846 184.6406 700.04 187.6836 695.3418 187.6836 c
692.0566 187.6836 689.5098 185.7607 688.6602 183.46 c
688.4326 182.9482 688.3213 182.2432 688.3213 181.5352 c
688.3213 167.8789 L
683.3389 167.8789 L
683.3389 184.4463 l
b
*U
*u
720.7637 196.0449 m
720.7637 190.5977 L
727.8965 190.5977 L
727.8965 187.4531 L
720.7637 187.4531 L
720.7637 175.2012 L
720.7637 172.3838 721.7305 170.7881 724.5039 170.7881 c
725.8574 170.7881 726.6494 170.8789 727.3877 171.0693 c
727.6152 167.9727 L
726.6494 167.6436 725.1221 167.3584 723.2002 167.3584 c
720.8799 167.3584 719.0098 168.0156 717.8213 169.1465 c
716.4043 170.3633 715.8906 172.3838 715.8906 175.0596 c
715.8906 187.4531 L
711.6484 187.4531 L
711.6484 190.5977 L
715.8906 190.5977 L
715.8906 194.7773 L
720.7637 196.0449 l
b
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
